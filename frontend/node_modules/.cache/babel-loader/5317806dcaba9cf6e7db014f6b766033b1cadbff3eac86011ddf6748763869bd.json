{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\nconst API = `${BACKEND_URL}/api`;\n\n// Timer presets in minutes and seconds for easy testing\nconst TIMER_PRESETS = [{\n  label: \"10s\",\n  value: 10 / 60,\n  unit: \"seconds\"\n}, {\n  label: \"30s\",\n  value: 30 / 60,\n  unit: \"seconds\"\n}, {\n  label: \"1m\",\n  value: 1,\n  unit: \"minutes\"\n}, {\n  label: \"5m\",\n  value: 5,\n  unit: \"minutes\"\n}, {\n  label: \"10m\",\n  value: 10,\n  unit: \"minutes\"\n}, {\n  label: \"15m\",\n  value: 15,\n  unit: \"minutes\"\n}, {\n  label: \"30m\",\n  value: 30,\n  unit: \"minutes\"\n}, {\n  label: \"45m\",\n  value: 45,\n  unit: \"minutes\"\n}, {\n  label: \"60m\",\n  value: 60,\n  unit: \"minutes\"\n}];\nconst SpotifyTimer = () => {\n  _s();\n  var _selectedTracks$curre, _selectedTracks$curre2, _selectedTracks$curre3, _selectedTracks$curre4, _selectedTracks$curre5, _selectedTracks$curre6, _selectedTracks$curre7, _selectedTracks$curre8;\n  // Authentication state\n  const [accessToken, setAccessToken] = useState(null);\n  const [refreshToken, setRefreshToken] = useState(null);\n  const [user, setUser] = useState(null);\n\n  // Track selection state\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [selectedTracks, setSelectedTracks] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n\n  // Timer state\n  const [timerDuration, setTimerDuration] = useState(30); // minutes\n  const [playDuration, setPlayDuration] = useState(30); // seconds\n  const [timeRemaining, setTimeRemaining] = useState(30 * 60); // seconds\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const [trackPositions, setTrackPositions] = useState({}); // Store position for each track\n\n  // UI state\n  const [showSettings, setShowSettings] = useState(false);\n  const [currentlyPlaying, setCurrentlyPlaying] = useState(null);\n  const [devices, setDevices] = useState([]);\n  const [customTimerInput, setCustomTimerInput] = useState('');\n\n  // Refs for intervals\n  const timerIntervalRef = useRef(null);\n  const playbackIntervalRef = useRef(null);\n\n  // Initialize app\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const code = urlParams.get('code');\n    if (code) {\n      handleAuthCallback(code);\n    } else {\n      // Try to load stored tokens\n      const storedAccessToken = localStorage.getItem('spotify_access_token');\n      const storedRefreshToken = localStorage.getItem('spotify_refresh_token');\n      if (storedAccessToken) {\n        setAccessToken(storedAccessToken);\n        setRefreshToken(storedRefreshToken);\n      }\n    }\n  }, []);\n\n  // Load user profile when access token is available\n  useEffect(() => {\n    if (accessToken) {\n      loadUserProfile();\n      loadDevices();\n      loadTimerSettings();\n    }\n  }, [accessToken]);\n\n  // Timer effect\n  useEffect(() => {\n    if (isTimerRunning && timeRemaining > 0) {\n      timerIntervalRef.current = setInterval(() => {\n        setTimeRemaining(prev => {\n          if (prev <= 1) {\n            // Timer reached zero - play track\n            playCurrentTrack();\n            return timerDuration * 60; // Reset timer\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else {\n      if (timerIntervalRef.current) {\n        clearInterval(timerIntervalRef.current);\n      }\n    }\n    return () => {\n      if (timerIntervalRef.current) {\n        clearInterval(timerIntervalRef.current);\n      }\n    };\n  }, [isTimerRunning, timeRemaining, timerDuration]);\n\n  // Persist timer state\n  useEffect(() => {\n    if (user !== null && user !== void 0 && user.id) {\n      localStorage.setItem(`timer_state_${user.id}`, JSON.stringify({\n        timeRemaining,\n        isTimerRunning,\n        currentTrackIndex,\n        trackPositions\n      }));\n    }\n  }, [timeRemaining, isTimerRunning, currentTrackIndex, trackPositions, user === null || user === void 0 ? void 0 : user.id]);\n  const handleAuthCallback = async code => {\n    try {\n      const response = await axios.get(`${API}/auth/callback?code=${code}`);\n      const {\n        access_token,\n        refresh_token\n      } = response.data;\n      setAccessToken(access_token);\n      setRefreshToken(refresh_token);\n      localStorage.setItem('spotify_access_token', access_token);\n      localStorage.setItem('spotify_refresh_token', refresh_token);\n\n      // Clean up URL\n      window.history.replaceState({}, document.title, '/');\n    } catch (error) {\n      console.error('Auth callback error:', error);\n      alert('Authentication failed. Please try again.');\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const response = await axios.get(`${API}/auth/login`);\n      window.location.href = response.data.auth_url;\n    } catch (error) {\n      console.error('Login error:', error);\n      alert('Failed to start login process');\n    }\n  };\n  const loadUserProfile = async () => {\n    try {\n      const response = await axios.get(`${API}/spotify/user?access_token=${accessToken}`);\n      setUser(response.data);\n\n      // Load saved timer state\n      const savedState = localStorage.getItem(`timer_state_${response.data.id}`);\n      if (savedState) {\n        const state = JSON.parse(savedState);\n        setTimeRemaining(state.timeRemaining || timerDuration * 60);\n        setCurrentTrackIndex(state.currentTrackIndex || 0);\n        setTrackPositions(state.trackPositions || {});\n      }\n    } catch (error) {\n      console.error('Failed to load user profile:', error);\n      // Token might be expired, try to refresh\n      if (refreshToken) {\n        await refreshAccessToken();\n      }\n    }\n  };\n  const refreshAccessToken = async () => {\n    try {\n      const response = await axios.post(`${API}/auth/refresh`, {\n        refresh_token: refreshToken\n      });\n      const {\n        access_token\n      } = response.data;\n      setAccessToken(access_token);\n      localStorage.setItem('spotify_access_token', access_token);\n    } catch (error) {\n      console.error('Token refresh failed:', error);\n      // Clear tokens and require re-login\n      localStorage.removeItem('spotify_access_token');\n      localStorage.removeItem('spotify_refresh_token');\n      setAccessToken(null);\n      setRefreshToken(null);\n    }\n  };\n  const loadDevices = async () => {\n    try {\n      const response = await axios.get(`${API}/spotify/devices?access_token=${accessToken}`);\n      setDevices(response.data.devices || []);\n    } catch (error) {\n      console.error('Failed to load devices:', error);\n    }\n  };\n  const loadTimerSettings = async () => {\n    if (!(user !== null && user !== void 0 && user.id)) return;\n    try {\n      const response = await axios.get(`${API}/timer/settings/${user.id}`);\n      const settings = response.data;\n      setTimerDuration(settings.timer_duration_minutes);\n      setPlayDuration(settings.play_duration_seconds);\n      setSelectedTracks(settings.selected_tracks);\n    } catch (error) {\n      console.error('Failed to load timer settings:', error);\n    }\n  };\n  const saveTimerSettings = async () => {\n    if (!(user !== null && user !== void 0 && user.id)) return;\n    try {\n      await axios.post(`${API}/timer/settings`, {\n        user_id: user.id,\n        timer_duration_minutes: timerDuration,\n        play_duration_seconds: playDuration,\n        selected_tracks: selectedTracks\n      });\n    } catch (error) {\n      console.error('Failed to save timer settings:', error);\n    }\n  };\n  const searchTracks = async () => {\n    if (!searchQuery.trim()) return;\n    setIsSearching(true);\n    try {\n      const response = await axios.get(`${API}/spotify/search?q=${encodeURIComponent(searchQuery)}&access_token=${accessToken}`);\n      setSearchResults(response.data.tracks || []);\n    } catch (error) {\n      console.error('Search failed:', error);\n      alert('Search failed. Please try again.');\n    } finally {\n      setIsSearching(false);\n    }\n  };\n  const selectTrack = track => {\n    if (selectedTracks.length >= 5) {\n      alert('You can only select up to 5 tracks');\n      return;\n    }\n    if (selectedTracks.find(t => t.id === track.id)) {\n      alert('Track already selected');\n      return;\n    }\n    const newTracks = [...selectedTracks, track];\n    setSelectedTracks(newTracks);\n    saveTimerSettings();\n  };\n  const removeTrack = trackId => {\n    const newTracks = selectedTracks.filter(t => t.id !== trackId);\n    setSelectedTracks(newTracks);\n    saveTimerSettings();\n  };\n  const playCurrentTrack = async () => {\n    if (selectedTracks.length === 0) {\n      alert('Please select at least one track');\n      return;\n    }\n    const track = selectedTracks[currentTrackIndex];\n    const savedPosition = trackPositions[track.uri] || 0;\n    try {\n      // First, try to get available devices\n      console.log('Getting available devices...');\n      const devicesResponse = await axios.get(`${API}/spotify/devices?access_token=${accessToken}`);\n      const availableDevices = devicesResponse.data.devices || [];\n      console.log('Available devices:', availableDevices);\n      if (availableDevices.length === 0) {\n        alert('No Spotify devices found. Please:\\n1. Open Spotify on your computer/phone\\n2. Play any song briefly to activate the device\\n3. Try again');\n        return;\n      }\n\n      // Use the first available device\n      const targetDevice = availableDevices[0];\n      console.log('Using device:', targetDevice.name);\n\n      // Make sure the device is active by transferring playback to it\n      try {\n        await axios.put(`${API}/spotify/transfer-playback?access_token=${accessToken}`, {\n          device_ids: [targetDevice.id],\n          play: false\n        });\n\n        // Wait a moment for transfer to complete\n        await new Promise(resolve => setTimeout(resolve, 1000));\n      } catch (transferError) {\n        console.log('Playback transfer failed, continuing anyway:', transferError);\n      }\n\n      // Now try to play the track\n      console.log(`Playing ${track.name} from position ${savedPosition}ms`);\n      await axios.post(`${API}/spotify/play?access_token=${accessToken}`, {\n        track_uri: track.uri,\n        position_ms: savedPosition,\n        device_id: targetDevice.id\n      });\n      setCurrentlyPlaying(track);\n      alert(`Now playing: ${track.name} for ${playDuration} seconds`);\n\n      // Set up playback monitoring\n      playbackIntervalRef.current = setInterval(async () => {\n        try {\n          const response = await axios.get(`${API}/spotify/playback?access_token=${accessToken}`);\n          const state = response.data;\n          if (state.is_playing && state.track) {\n            const newPosition = state.progress_ms;\n            const playedDuration = newPosition - savedPosition;\n\n            // Update track position\n            setTrackPositions(prev => ({\n              ...prev,\n              [track.uri]: newPosition\n            }));\n\n            // Save position to backend\n            await axios.post(`${API}/timer/track-position`, {\n              user_id: user.id,\n              track_uri: track.uri,\n              current_position_ms: newPosition\n            });\n\n            // Stop after play duration\n            if (playedDuration >= playDuration * 1000) {\n              await axios.post(`${API}/spotify/pause?access_token=${accessToken}&device_id=${targetDevice.id}`);\n              setCurrentlyPlaying(null);\n\n              // Move to next track for next cycle\n              setCurrentTrackIndex(prev => (prev + 1) % selectedTracks.length);\n              clearInterval(playbackIntervalRef.current);\n              alert(`Finished playing ${track.name}. Timer reset for next cycle.`);\n            }\n          }\n        } catch (error) {\n          console.error('Playback monitoring error:', error);\n        }\n      }, 1000);\n    } catch (error) {\n      console.error('Playback failed:', error);\n      let errorMessage = 'Playback failed. ';\n      if (error.response) {\n        var _error$response$data, _error$response$data2;\n        // Server responded with error status\n        const status = error.response.status;\n        const detail = ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || ((_error$response$data2 = error.response.data) === null || _error$response$data2 === void 0 ? void 0 : _error$response$data2.message) || 'Unknown error';\n        if (status === 404) {\n          errorMessage = 'No active Spotify device found. Please:\\n1. Open Spotify on your computer/phone\\n2. Play any song briefly to activate the device\\n3. Try again';\n        } else if (status === 403) {\n          errorMessage = 'Playback failed. Make sure you have Spotify Premium - it\\'s required for remote control.';\n        } else {\n          errorMessage = `Playback failed (${status}): ${detail}\\n\\nTry:\\n1. Opening Spotify on another device\\n2. Playing a song briefly\\n3. Refreshing this page`;\n        }\n      } else if (error.request) {\n        // Network error\n        errorMessage = 'Network error. Please check your connection and try again.';\n      } else {\n        // Other error\n        errorMessage = `Playback failed: ${error.message}\\n\\nTry:\\n1. Opening Spotify on another device\\n2. Playing a song briefly\\n3. Refreshing this page`;\n      }\n      alert(errorMessage);\n    }\n  };\n  const startTimer = () => {\n    if (selectedTracks.length === 0) {\n      alert('Please select at least one track');\n      return;\n    }\n    setIsTimerRunning(true);\n    saveTimerSettings();\n  };\n  const stopTimer = () => {\n    setIsTimerRunning(false);\n    if (playbackIntervalRef.current) {\n      clearInterval(playbackIntervalRef.current);\n    }\n  };\n  const fullStop = async () => {\n    setIsTimerRunning(false);\n    setTimeRemaining(timerDuration * 60);\n    setCurrentTrackIndex(0);\n    setTrackPositions({});\n    setCurrentlyPlaying(null);\n    if (playbackIntervalRef.current) {\n      clearInterval(playbackIntervalRef.current);\n    }\n    try {\n      await axios.post(`${API}/spotify/pause?access_token=${accessToken}`);\n    } catch (error) {\n      console.error('Failed to pause:', error);\n    }\n  };\n  const applyCustomTimer = () => {\n    const minutes = parseInt(customTimerInput);\n    if (minutes >= 1 && minutes <= 120) {\n      setTimerDuration(minutes);\n      setTimeRemaining(minutes * 60);\n      setCustomTimerInput('');\n      saveTimerSettings();\n    } else {\n      alert('Please enter a valid number between 1 and 120 minutes');\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  const formatTrackDuration = ms => {\n    const seconds = Math.floor(ms / 1000);\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // If not authenticated, show login\n  if (!accessToken) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spotify-timer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"\\uD83C\\uDFB5 Spotify Timer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Play your favorite tracks on a custom timer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogin,\n          className: \"spotify-login-btn\",\n          children: \"Login with Spotify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If no premium, show upgrade message\n  if (user && !user.is_premium) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spotify-timer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"premium-required\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Spotify Premium Required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This app requires Spotify Premium to control playback.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://www.spotify.com/premium/\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"upgrade-btn\",\n          children: \"Upgrade to Premium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            localStorage.clear();\n            window.location.reload();\n          },\n          className: \"logout-btn\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spotify-timer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83C\\uDFB5 Spotify Timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Welcome, \", user === null || user === void 0 ? void 0 : user.display_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"settings-btn\",\n          onClick: () => setShowSettings(!showSettings),\n          children: \"\\u2699\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-remaining\",\n        children: formatTime(timeRemaining)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-info\",\n        children: [\"Timer: \", timerDuration, \" min | Play: \", playDuration, \"s | Track: \", currentTrackIndex + 1, \"/\", selectedTracks.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 7\n    }, this), selectedTracks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-track\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Current Track:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-item\",\n        children: [((_selectedTracks$curre = selectedTracks[currentTrackIndex]) === null || _selectedTracks$curre === void 0 ? void 0 : (_selectedTracks$curre2 = _selectedTracks$curre.album) === null || _selectedTracks$curre2 === void 0 ? void 0 : (_selectedTracks$curre3 = _selectedTracks$curre2.images) === null || _selectedTracks$curre3 === void 0 ? void 0 : _selectedTracks$curre3[0]) && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectedTracks[currentTrackIndex].album.images[0].url,\n          alt: selectedTracks[currentTrackIndex].name,\n          className: \"track-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track-name\",\n            children: (_selectedTracks$curre4 = selectedTracks[currentTrackIndex]) === null || _selectedTracks$curre4 === void 0 ? void 0 : _selectedTracks$curre4.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track-artist\",\n            children: (_selectedTracks$curre5 = selectedTracks[currentTrackIndex]) === null || _selectedTracks$curre5 === void 0 ? void 0 : (_selectedTracks$curre6 = _selectedTracks$curre5.artists) === null || _selectedTracks$curre6 === void 0 ? void 0 : _selectedTracks$curre6.map(a => a.name).join(', ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track-position\",\n            children: [\"Position: \", formatTrackDuration(trackPositions[(_selectedTracks$curre7 = selectedTracks[currentTrackIndex]) === null || _selectedTracks$curre7 === void 0 ? void 0 : _selectedTracks$curre7.uri] || 0), \" /\", formatTrackDuration(((_selectedTracks$curre8 = selectedTracks[currentTrackIndex]) === null || _selectedTracks$curre8 === void 0 ? void 0 : _selectedTracks$curre8.duration_ms) || 0)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 11\n      }, this), currentlyPlaying && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"now-playing\",\n        children: [\"\\u25B6\\uFE0F Now Playing: \", playDuration, \"s segment\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startTimer,\n        disabled: isTimerRunning || selectedTracks.length === 0,\n        className: \"control-btn start-btn\",\n        children: \"START\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopTimer,\n        disabled: !isTimerRunning,\n        className: \"control-btn stop-btn\",\n        children: \"STOP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fullStop,\n        className: \"control-btn full-stop-btn\",\n        children: \"FULL STOP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 7\n    }, this), showSettings && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Timer Duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-presets\",\n          children: TIMER_PRESETS.map(minutes => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setTimerDuration(minutes);\n              setTimeRemaining(minutes * 60);\n              saveTimerSettings();\n            },\n            className: timerDuration === minutes ? 'preset-btn active' : 'preset-btn',\n            children: [minutes, \"m\"]\n          }, minutes, true, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-timer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: customTimerInput,\n            onChange: e => setCustomTimerInput(e.target.value),\n            placeholder: \"Custom minutes (1-120)\",\n            min: \"1\",\n            max: \"120\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: applyCustomTimer,\n            className: \"apply-btn\",\n            children: \"Apply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Play Duration (seconds)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"10\",\n          max: \"60\",\n          value: playDuration,\n          onChange: e => {\n            setPlayDuration(parseInt(e.target.value));\n            saveTimerSettings();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [playDuration, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Selected Tracks (\", selectedTracks.length, \"/5)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: searchQuery,\n            onChange: e => setSearchQuery(e.target.value),\n            placeholder: \"Search for tracks...\",\n            onKeyPress: e => e.key === 'Enter' && searchTracks()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: searchTracks,\n            disabled: isSearching,\n            children: isSearching ? 'Searching...' : 'Search'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 9\n      }, this), selectedTracks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-tracks\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Your Tracks:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 13\n        }, this), selectedTracks.map((track, index) => {\n          var _track$album, _track$album$images, _track$artists;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track-item selected\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"track-number\",\n              children: [index + 1, \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 17\n            }, this), ((_track$album = track.album) === null || _track$album === void 0 ? void 0 : (_track$album$images = _track$album.images) === null || _track$album$images === void 0 ? void 0 : _track$album$images[2]) && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: track.album.images[2].url,\n              alt: track.name,\n              className: \"track-image-small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 639,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"track-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track-name\",\n                children: track.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 642,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track-artist\",\n                children: (_track$artists = track.artists) === null || _track$artists === void 0 ? void 0 : _track$artists.map(a => a.name).join(', ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeTrack(track.id),\n              className: \"remove-btn\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 17\n            }, this)]\n          }, track.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 11\n      }, this), searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Search Results:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 13\n        }, this), searchResults.map(track => {\n          var _track$album2, _track$album2$images, _track$artists2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track-item\",\n            children: [((_track$album2 = track.album) === null || _track$album2 === void 0 ? void 0 : (_track$album2$images = _track$album2.images) === null || _track$album2$images === void 0 ? void 0 : _track$album2$images[2]) && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: track.album.images[2].url,\n              alt: track.name,\n              className: \"track-image-small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"track-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track-name\",\n                children: track.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track-artist\",\n                children: (_track$artists2 = track.artists) === null || _track$artists2 === void 0 ? void 0 : _track$artists2.map(a => a.name).join(', ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 662,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track-duration\",\n                children: formatTrackDuration(track.duration_ms)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 663,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => selectTrack(track),\n              disabled: selectedTracks.length >= 5 || selectedTracks.find(t => t.id === track.id),\n              className: \"select-btn\",\n              children: selectedTracks.find(t => t.id === track.id) ? 'Selected' : 'Select'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 17\n            }, this)]\n          }, track.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 477,\n    columnNumber: 5\n  }, this);\n};\n_s(SpotifyTimer, \"kXPPC75BkMySpdSwXHo8he9/cXo=\");\n_c = SpotifyTimer;\nexport default SpotifyTimer;\nvar _c;\n$RefreshReg$(_c, \"SpotifyTimer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","BACKEND_URL","process","env","REACT_APP_BACKEND_URL","API","TIMER_PRESETS","label","value","unit","SpotifyTimer","_s","_selectedTracks$curre","_selectedTracks$curre2","_selectedTracks$curre3","_selectedTracks$curre4","_selectedTracks$curre5","_selectedTracks$curre6","_selectedTracks$curre7","_selectedTracks$curre8","accessToken","setAccessToken","refreshToken","setRefreshToken","user","setUser","searchQuery","setSearchQuery","searchResults","setSearchResults","selectedTracks","setSelectedTracks","isSearching","setIsSearching","timerDuration","setTimerDuration","playDuration","setPlayDuration","timeRemaining","setTimeRemaining","isTimerRunning","setIsTimerRunning","currentTrackIndex","setCurrentTrackIndex","trackPositions","setTrackPositions","showSettings","setShowSettings","currentlyPlaying","setCurrentlyPlaying","devices","setDevices","customTimerInput","setCustomTimerInput","timerIntervalRef","playbackIntervalRef","urlParams","URLSearchParams","window","location","search","code","get","handleAuthCallback","storedAccessToken","localStorage","getItem","storedRefreshToken","loadUserProfile","loadDevices","loadTimerSettings","current","setInterval","prev","playCurrentTrack","clearInterval","id","setItem","JSON","stringify","response","access_token","refresh_token","data","history","replaceState","document","title","error","console","alert","handleLogin","href","auth_url","savedState","state","parse","refreshAccessToken","post","removeItem","settings","timer_duration_minutes","play_duration_seconds","selected_tracks","saveTimerSettings","user_id","searchTracks","trim","encodeURIComponent","tracks","selectTrack","track","length","find","t","newTracks","removeTrack","trackId","filter","savedPosition","uri","log","devicesResponse","availableDevices","targetDevice","name","put","device_ids","play","Promise","resolve","setTimeout","transferError","track_uri","position_ms","device_id","is_playing","newPosition","progress_ms","playedDuration","current_position_ms","errorMessage","_error$response$data","_error$response$data2","status","detail","message","request","startTimer","stopTimer","fullStop","applyCustomTimer","minutes","parseInt","formatTime","seconds","mins","Math","floor","secs","toString","padStart","formatTrackDuration","ms","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","is_premium","target","rel","clear","reload","display_name","album","images","src","url","alt","artists","map","a","join","duration_ms","disabled","type","onChange","e","placeholder","min","max","onKeyPress","key","index","_track$album","_track$album$images","_track$artists","_track$album2","_track$album2$images","_track$artists2","_c","$RefreshReg$"],"sources":["/app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\nconst API = `${BACKEND_URL}/api`;\n\n// Timer presets in minutes and seconds for easy testing\nconst TIMER_PRESETS = [\n  { label: \"10s\", value: 10/60, unit: \"seconds\" },\n  { label: \"30s\", value: 30/60, unit: \"seconds\" },\n  { label: \"1m\", value: 1, unit: \"minutes\" },\n  { label: \"5m\", value: 5, unit: \"minutes\" },\n  { label: \"10m\", value: 10, unit: \"minutes\" },\n  { label: \"15m\", value: 15, unit: \"minutes\" },\n  { label: \"30m\", value: 30, unit: \"minutes\" },\n  { label: \"45m\", value: 45, unit: \"minutes\" },\n  { label: \"60m\", value: 60, unit: \"minutes\" }\n];\n\nconst SpotifyTimer = () => {\n  // Authentication state\n  const [accessToken, setAccessToken] = useState(null);\n  const [refreshToken, setRefreshToken] = useState(null);\n  const [user, setUser] = useState(null);\n\n  // Track selection state\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [selectedTracks, setSelectedTracks] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n\n  // Timer state\n  const [timerDuration, setTimerDuration] = useState(30); // minutes\n  const [playDuration, setPlayDuration] = useState(30); // seconds\n  const [timeRemaining, setTimeRemaining] = useState(30 * 60); // seconds\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const [trackPositions, setTrackPositions] = useState({}); // Store position for each track\n\n  // UI state\n  const [showSettings, setShowSettings] = useState(false);\n  const [currentlyPlaying, setCurrentlyPlaying] = useState(null);\n  const [devices, setDevices] = useState([]);\n  const [customTimerInput, setCustomTimerInput] = useState('');\n\n  // Refs for intervals\n  const timerIntervalRef = useRef(null);\n  const playbackIntervalRef = useRef(null);\n\n  // Initialize app\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const code = urlParams.get('code');\n    \n    if (code) {\n      handleAuthCallback(code);\n    } else {\n      // Try to load stored tokens\n      const storedAccessToken = localStorage.getItem('spotify_access_token');\n      const storedRefreshToken = localStorage.getItem('spotify_refresh_token');\n      \n      if (storedAccessToken) {\n        setAccessToken(storedAccessToken);\n        setRefreshToken(storedRefreshToken);\n      }\n    }\n  }, []);\n\n  // Load user profile when access token is available\n  useEffect(() => {\n    if (accessToken) {\n      loadUserProfile();\n      loadDevices();\n      loadTimerSettings();\n    }\n  }, [accessToken]);\n\n  // Timer effect\n  useEffect(() => {\n    if (isTimerRunning && timeRemaining > 0) {\n      timerIntervalRef.current = setInterval(() => {\n        setTimeRemaining(prev => {\n          if (prev <= 1) {\n            // Timer reached zero - play track\n            playCurrentTrack();\n            return timerDuration * 60; // Reset timer\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else {\n      if (timerIntervalRef.current) {\n        clearInterval(timerIntervalRef.current);\n      }\n    }\n\n    return () => {\n      if (timerIntervalRef.current) {\n        clearInterval(timerIntervalRef.current);\n      }\n    };\n  }, [isTimerRunning, timeRemaining, timerDuration]);\n\n  // Persist timer state\n  useEffect(() => {\n    if (user?.id) {\n      localStorage.setItem(`timer_state_${user.id}`, JSON.stringify({\n        timeRemaining,\n        isTimerRunning,\n        currentTrackIndex,\n        trackPositions\n      }));\n    }\n  }, [timeRemaining, isTimerRunning, currentTrackIndex, trackPositions, user?.id]);\n\n  const handleAuthCallback = async (code) => {\n    try {\n      const response = await axios.get(`${API}/auth/callback?code=${code}`);\n      const { access_token, refresh_token } = response.data;\n      \n      setAccessToken(access_token);\n      setRefreshToken(refresh_token);\n      \n      localStorage.setItem('spotify_access_token', access_token);\n      localStorage.setItem('spotify_refresh_token', refresh_token);\n      \n      // Clean up URL\n      window.history.replaceState({}, document.title, '/');\n    } catch (error) {\n      console.error('Auth callback error:', error);\n      alert('Authentication failed. Please try again.');\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      const response = await axios.get(`${API}/auth/login`);\n      window.location.href = response.data.auth_url;\n    } catch (error) {\n      console.error('Login error:', error);\n      alert('Failed to start login process');\n    }\n  };\n\n  const loadUserProfile = async () => {\n    try {\n      const response = await axios.get(`${API}/spotify/user?access_token=${accessToken}`);\n      setUser(response.data);\n      \n      // Load saved timer state\n      const savedState = localStorage.getItem(`timer_state_${response.data.id}`);\n      if (savedState) {\n        const state = JSON.parse(savedState);\n        setTimeRemaining(state.timeRemaining || timerDuration * 60);\n        setCurrentTrackIndex(state.currentTrackIndex || 0);\n        setTrackPositions(state.trackPositions || {});\n      }\n    } catch (error) {\n      console.error('Failed to load user profile:', error);\n      // Token might be expired, try to refresh\n      if (refreshToken) {\n        await refreshAccessToken();\n      }\n    }\n  };\n\n  const refreshAccessToken = async () => {\n    try {\n      const response = await axios.post(`${API}/auth/refresh`, { refresh_token: refreshToken });\n      const { access_token } = response.data;\n      setAccessToken(access_token);\n      localStorage.setItem('spotify_access_token', access_token);\n    } catch (error) {\n      console.error('Token refresh failed:', error);\n      // Clear tokens and require re-login\n      localStorage.removeItem('spotify_access_token');\n      localStorage.removeItem('spotify_refresh_token');\n      setAccessToken(null);\n      setRefreshToken(null);\n    }\n  };\n\n  const loadDevices = async () => {\n    try {\n      const response = await axios.get(`${API}/spotify/devices?access_token=${accessToken}`);\n      setDevices(response.data.devices || []);\n    } catch (error) {\n      console.error('Failed to load devices:', error);\n    }\n  };\n\n  const loadTimerSettings = async () => {\n    if (!user?.id) return;\n    \n    try {\n      const response = await axios.get(`${API}/timer/settings/${user.id}`);\n      const settings = response.data;\n      \n      setTimerDuration(settings.timer_duration_minutes);\n      setPlayDuration(settings.play_duration_seconds);\n      setSelectedTracks(settings.selected_tracks);\n    } catch (error) {\n      console.error('Failed to load timer settings:', error);\n    }\n  };\n\n  const saveTimerSettings = async () => {\n    if (!user?.id) return;\n    \n    try {\n      await axios.post(`${API}/timer/settings`, {\n        user_id: user.id,\n        timer_duration_minutes: timerDuration,\n        play_duration_seconds: playDuration,\n        selected_tracks: selectedTracks\n      });\n    } catch (error) {\n      console.error('Failed to save timer settings:', error);\n    }\n  };\n\n  const searchTracks = async () => {\n    if (!searchQuery.trim()) return;\n    \n    setIsSearching(true);\n    try {\n      const response = await axios.get(`${API}/spotify/search?q=${encodeURIComponent(searchQuery)}&access_token=${accessToken}`);\n      setSearchResults(response.data.tracks || []);\n    } catch (error) {\n      console.error('Search failed:', error);\n      alert('Search failed. Please try again.');\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  const selectTrack = (track) => {\n    if (selectedTracks.length >= 5) {\n      alert('You can only select up to 5 tracks');\n      return;\n    }\n    \n    if (selectedTracks.find(t => t.id === track.id)) {\n      alert('Track already selected');\n      return;\n    }\n    \n    const newTracks = [...selectedTracks, track];\n    setSelectedTracks(newTracks);\n    saveTimerSettings();\n  };\n\n  const removeTrack = (trackId) => {\n    const newTracks = selectedTracks.filter(t => t.id !== trackId);\n    setSelectedTracks(newTracks);\n    saveTimerSettings();\n  };\n\n  const playCurrentTrack = async () => {\n    if (selectedTracks.length === 0) {\n      alert('Please select at least one track');\n      return;\n    }\n    \n    const track = selectedTracks[currentTrackIndex];\n    const savedPosition = trackPositions[track.uri] || 0;\n    \n    try {\n      // First, try to get available devices\n      console.log('Getting available devices...');\n      const devicesResponse = await axios.get(`${API}/spotify/devices?access_token=${accessToken}`);\n      const availableDevices = devicesResponse.data.devices || [];\n      \n      console.log('Available devices:', availableDevices);\n      \n      if (availableDevices.length === 0) {\n        alert('No Spotify devices found. Please:\\n1. Open Spotify on your computer/phone\\n2. Play any song briefly to activate the device\\n3. Try again');\n        return;\n      }\n      \n      // Use the first available device\n      const targetDevice = availableDevices[0];\n      console.log('Using device:', targetDevice.name);\n      \n      // Make sure the device is active by transferring playback to it\n      try {\n        await axios.put(`${API}/spotify/transfer-playback?access_token=${accessToken}`, {\n          device_ids: [targetDevice.id],\n          play: false\n        });\n        \n        // Wait a moment for transfer to complete\n        await new Promise(resolve => setTimeout(resolve, 1000));\n      } catch (transferError) {\n        console.log('Playback transfer failed, continuing anyway:', transferError);\n      }\n      \n      // Now try to play the track\n      console.log(`Playing ${track.name} from position ${savedPosition}ms`);\n      await axios.post(`${API}/spotify/play?access_token=${accessToken}`, {\n        track_uri: track.uri,\n        position_ms: savedPosition,\n        device_id: targetDevice.id\n      });\n      \n      setCurrentlyPlaying(track);\n      alert(`Now playing: ${track.name} for ${playDuration} seconds`);\n      \n      // Set up playback monitoring\n      playbackIntervalRef.current = setInterval(async () => {\n        try {\n          const response = await axios.get(`${API}/spotify/playback?access_token=${accessToken}`);\n          const state = response.data;\n          \n          if (state.is_playing && state.track) {\n            const newPosition = state.progress_ms;\n            const playedDuration = newPosition - savedPosition;\n            \n            // Update track position\n            setTrackPositions(prev => ({\n              ...prev,\n              [track.uri]: newPosition\n            }));\n            \n            // Save position to backend\n            await axios.post(`${API}/timer/track-position`, {\n              user_id: user.id,\n              track_uri: track.uri,\n              current_position_ms: newPosition\n            });\n            \n            // Stop after play duration\n            if (playedDuration >= playDuration * 1000) {\n              await axios.post(`${API}/spotify/pause?access_token=${accessToken}&device_id=${targetDevice.id}`);\n              setCurrentlyPlaying(null);\n              \n              // Move to next track for next cycle\n              setCurrentTrackIndex(prev => (prev + 1) % selectedTracks.length);\n              \n              clearInterval(playbackIntervalRef.current);\n              alert(`Finished playing ${track.name}. Timer reset for next cycle.`);\n            }\n          }\n        } catch (error) {\n          console.error('Playback monitoring error:', error);\n        }\n      }, 1000);\n      \n    } catch (error) {\n      console.error('Playback failed:', error);\n      \n      let errorMessage = 'Playback failed. ';\n      \n      if (error.response) {\n        // Server responded with error status\n        const status = error.response.status;\n        const detail = error.response.data?.detail || error.response.data?.message || 'Unknown error';\n        \n        if (status === 404) {\n          errorMessage = 'No active Spotify device found. Please:\\n1. Open Spotify on your computer/phone\\n2. Play any song briefly to activate the device\\n3. Try again';\n        } else if (status === 403) {\n          errorMessage = 'Playback failed. Make sure you have Spotify Premium - it\\'s required for remote control.';\n        } else {\n          errorMessage = `Playback failed (${status}): ${detail}\\n\\nTry:\\n1. Opening Spotify on another device\\n2. Playing a song briefly\\n3. Refreshing this page`;\n        }\n      } else if (error.request) {\n        // Network error\n        errorMessage = 'Network error. Please check your connection and try again.';\n      } else {\n        // Other error\n        errorMessage = `Playback failed: ${error.message}\\n\\nTry:\\n1. Opening Spotify on another device\\n2. Playing a song briefly\\n3. Refreshing this page`;\n      }\n      \n      alert(errorMessage);\n    }\n  };\n\n  const startTimer = () => {\n    if (selectedTracks.length === 0) {\n      alert('Please select at least one track');\n      return;\n    }\n    setIsTimerRunning(true);\n    saveTimerSettings();\n  };\n\n  const stopTimer = () => {\n    setIsTimerRunning(false);\n    if (playbackIntervalRef.current) {\n      clearInterval(playbackIntervalRef.current);\n    }\n  };\n\n  const fullStop = async () => {\n    setIsTimerRunning(false);\n    setTimeRemaining(timerDuration * 60);\n    setCurrentTrackIndex(0);\n    setTrackPositions({});\n    setCurrentlyPlaying(null);\n    \n    if (playbackIntervalRef.current) {\n      clearInterval(playbackIntervalRef.current);\n    }\n    \n    try {\n      await axios.post(`${API}/spotify/pause?access_token=${accessToken}`);\n    } catch (error) {\n      console.error('Failed to pause:', error);\n    }\n  };\n\n  const applyCustomTimer = () => {\n    const minutes = parseInt(customTimerInput);\n    if (minutes >= 1 && minutes <= 120) {\n      setTimerDuration(minutes);\n      setTimeRemaining(minutes * 60);\n      setCustomTimerInput('');\n      saveTimerSettings();\n    } else {\n      alert('Please enter a valid number between 1 and 120 minutes');\n    }\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const formatTrackDuration = (ms) => {\n    const seconds = Math.floor(ms / 1000);\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // If not authenticated, show login\n  if (!accessToken) {\n    return (\n      <div className=\"spotify-timer\">\n        <div className=\"login-container\">\n          <div className=\"logo\">\n            <h1>🎵 Spotify Timer</h1>\n            <p>Play your favorite tracks on a custom timer</p>\n          </div>\n          <button onClick={handleLogin} className=\"spotify-login-btn\">\n            Login with Spotify\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // If no premium, show upgrade message\n  if (user && !user.is_premium) {\n    return (\n      <div className=\"spotify-timer\">\n        <div className=\"premium-required\">\n          <h2>Spotify Premium Required</h2>\n          <p>This app requires Spotify Premium to control playback.</p>\n          <a href=\"https://www.spotify.com/premium/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"upgrade-btn\">\n            Upgrade to Premium\n          </a>\n          <button onClick={() => {\n            localStorage.clear();\n            window.location.reload();\n          }} className=\"logout-btn\">\n            Logout\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"spotify-timer\">\n      {/* Header */}\n      <div className=\"header\">\n        <h1>🎵 Spotify Timer</h1>\n        <div className=\"user-info\">\n          <span>Welcome, {user?.display_name}</span>\n          <button \n            className=\"settings-btn\"\n            onClick={() => setShowSettings(!showSettings)}\n          >\n            ⚙️\n          </button>\n        </div>\n      </div>\n\n      {/* Timer Display */}\n      <div className=\"timer-display\">\n        <div className=\"time-remaining\">\n          {formatTime(timeRemaining)}\n        </div>\n        <div className=\"timer-info\">\n          Timer: {timerDuration} min | Play: {playDuration}s | Track: {currentTrackIndex + 1}/{selectedTracks.length}\n        </div>\n      </div>\n\n      {/* Current Track Info */}\n      {selectedTracks.length > 0 && (\n        <div className=\"current-track\">\n          <h3>Current Track:</h3>\n          <div className=\"track-item\">\n            {selectedTracks[currentTrackIndex]?.album?.images?.[0] && (\n              <img \n                src={selectedTracks[currentTrackIndex].album.images[0].url} \n                alt={selectedTracks[currentTrackIndex].name}\n                className=\"track-image\"\n              />\n            )}\n            <div className=\"track-details\">\n              <div className=\"track-name\">{selectedTracks[currentTrackIndex]?.name}</div>\n              <div className=\"track-artist\">\n                {selectedTracks[currentTrackIndex]?.artists?.map(a => a.name).join(', ')}\n              </div>\n              <div className=\"track-position\">\n                Position: {formatTrackDuration(trackPositions[selectedTracks[currentTrackIndex]?.uri] || 0)} / \n                {formatTrackDuration(selectedTracks[currentTrackIndex]?.duration_ms || 0)}\n              </div>\n            </div>\n          </div>\n          {currentlyPlaying && (\n            <div className=\"now-playing\">\n              ▶️ Now Playing: {playDuration}s segment\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Controls */}\n      <div className=\"controls\">\n        <button \n          onClick={startTimer} \n          disabled={isTimerRunning || selectedTracks.length === 0}\n          className=\"control-btn start-btn\"\n        >\n          START\n        </button>\n        <button \n          onClick={stopTimer} \n          disabled={!isTimerRunning}\n          className=\"control-btn stop-btn\"\n        >\n          STOP\n        </button>\n        <button \n          onClick={fullStop}\n          className=\"control-btn full-stop-btn\"\n        >\n          FULL STOP\n        </button>\n      </div>\n\n      {/* Settings Panel */}\n      {showSettings && (\n        <div className=\"settings-panel\">\n          <h3>Settings</h3>\n          \n          {/* Timer Duration */}\n          <div className=\"setting-group\">\n            <label>Timer Duration</label>\n            <div className=\"timer-presets\">\n              {TIMER_PRESETS.map(minutes => (\n                <button\n                  key={minutes}\n                  onClick={() => {\n                    setTimerDuration(minutes);\n                    setTimeRemaining(minutes * 60);\n                    saveTimerSettings();\n                  }}\n                  className={timerDuration === minutes ? 'preset-btn active' : 'preset-btn'}\n                >\n                  {minutes}m\n                </button>\n              ))}\n            </div>\n            <div className=\"custom-timer\">\n              <input\n                type=\"number\"\n                value={customTimerInput}\n                onChange={(e) => setCustomTimerInput(e.target.value)}\n                placeholder=\"Custom minutes (1-120)\"\n                min=\"1\"\n                max=\"120\"\n              />\n              <button onClick={applyCustomTimer} className=\"apply-btn\">Apply</button>\n            </div>\n          </div>\n\n          {/* Play Duration */}\n          <div className=\"setting-group\">\n            <label>Play Duration (seconds)</label>\n            <input\n              type=\"range\"\n              min=\"10\"\n              max=\"60\"\n              value={playDuration}\n              onChange={(e) => {\n                setPlayDuration(parseInt(e.target.value));\n                saveTimerSettings();\n              }}\n            />\n            <span>{playDuration}s</span>\n          </div>\n        </div>\n      )}\n\n      {/* Track Selection */}\n      <div className=\"track-selection\">\n        <h3>Selected Tracks ({selectedTracks.length}/5)</h3>\n        \n        {/* Search */}\n        <div className=\"search-section\">\n          <div className=\"search-input\">\n            <input\n              type=\"text\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              placeholder=\"Search for tracks...\"\n              onKeyPress={(e) => e.key === 'Enter' && searchTracks()}\n            />\n            <button onClick={searchTracks} disabled={isSearching}>\n              {isSearching ? 'Searching...' : 'Search'}\n            </button>\n          </div>\n        </div>\n\n        {/* Selected Tracks */}\n        {selectedTracks.length > 0 && (\n          <div className=\"selected-tracks\">\n            <h4>Your Tracks:</h4>\n            {selectedTracks.map((track, index) => (\n              <div key={track.id} className=\"track-item selected\">\n                <span className=\"track-number\">{index + 1}.</span>\n                {track.album?.images?.[2] && (\n                  <img src={track.album.images[2].url} alt={track.name} className=\"track-image-small\" />\n                )}\n                <div className=\"track-info\">\n                  <div className=\"track-name\">{track.name}</div>\n                  <div className=\"track-artist\">{track.artists?.map(a => a.name).join(', ')}</div>\n                </div>\n                <button onClick={() => removeTrack(track.id)} className=\"remove-btn\">×</button>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {/* Search Results */}\n        {searchResults.length > 0 && (\n          <div className=\"search-results\">\n            <h4>Search Results:</h4>\n            {searchResults.map((track) => (\n              <div key={track.id} className=\"track-item\">\n                {track.album?.images?.[2] && (\n                  <img src={track.album.images[2].url} alt={track.name} className=\"track-image-small\" />\n                )}\n                <div className=\"track-info\">\n                  <div className=\"track-name\">{track.name}</div>\n                  <div className=\"track-artist\">{track.artists?.map(a => a.name).join(', ')}</div>\n                  <div className=\"track-duration\">{formatTrackDuration(track.duration_ms)}</div>\n                </div>\n                <button \n                  onClick={() => selectTrack(track)} \n                  disabled={selectedTracks.length >= 5 || selectedTracks.find(t => t.id === track.id)}\n                  className=\"select-btn\"\n                >\n                  {selectedTracks.find(t => t.id === track.id) ? 'Selected' : 'Select'}\n                </button>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SpotifyTimer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}