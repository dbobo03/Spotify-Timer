{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\nconst API = `${BACKEND_URL}/api`;\n\n// Timer presets in minutes and seconds for easy testing\nconst TIMER_PRESETS = [{\n  label: \"10s\",\n  value: 10 / 60,\n  unit: \"seconds\"\n}, {\n  label: \"30s\",\n  value: 30 / 60,\n  unit: \"seconds\"\n}, {\n  label: \"1m\",\n  value: 1,\n  unit: \"minutes\"\n}, {\n  label: \"5m\",\n  value: 5,\n  unit: \"minutes\"\n}, {\n  label: \"10m\",\n  value: 10,\n  unit: \"minutes\"\n}, {\n  label: \"15m\",\n  value: 15,\n  unit: \"minutes\"\n}, {\n  label: \"30m\",\n  value: 30,\n  unit: \"minutes\"\n}, {\n  label: \"45m\",\n  value: 45,\n  unit: \"minutes\"\n}, {\n  label: \"60m\",\n  value: 60,\n  unit: \"minutes\"\n}];\n\n// Days of the week\nconst DAYS = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n\n// Time slots from 7:00 to 17:00 (30-min intervals)\nconst generateTimeSlots = () => {\n  const slots = [];\n  for (let hour = 7; hour <= 17; hour++) {\n    slots.push(`${hour.toString().padStart(2, '0')}:00`);\n    if (hour < 17) {\n      slots.push(`${hour.toString().padStart(2, '0')}:30`);\n    }\n  }\n  return slots;\n};\nconst TIME_SLOTS = generateTimeSlots();\nconst SpotifyTimer = () => {\n  _s();\n  var _selectedTracks$curre, _selectedTracks$curre2, _selectedTracks$curre3, _selectedTracks$curre4, _selectedTracks$curre5, _selectedTracks$curre6, _selectedTracks$curre7, _selectedTracks$curre8;\n  // Authentication state\n  const [accessToken, setAccessToken] = useState(null);\n  const [refreshToken, setRefreshToken] = useState(null);\n  const [user, setUser] = useState(null);\n\n  // Track selection state\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [selectedTracks, setSelectedTracks] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n\n  // Timer state\n  const [timerDuration, setTimerDuration] = useState(30); // minutes\n  const [playDuration, setPlayDuration] = useState(30); // seconds\n  const [timeRemaining, setTimeRemaining] = useState(30 * 60); // seconds\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false); // New state to track if song is playing\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const [trackPositions, setTrackPositions] = useState({}); // Store position for each track\n\n  // New enhanced features\n  const [activeTab, setActiveTab] = useState('timer'); // timer, schedule, settings\n  const [weeklySchedule, setWeeklySchedule] = useState({});\n  const [playbackTimingMode, setPlaybackTimingMode] = useState('start'); // 'start' or 'end'\n  const [absoluteTimeMode, setAbsoluteTimeMode] = useState(false);\n  const [absoluteTimeSlots, setAbsoluteTimeSlots] = useState({\n    hourly: false,\n    halfHourly: false,\n    custom: {}\n  });\n  const [notificationsEnabled, setNotificationsEnabled] = useState(false);\n\n  // UI state\n  const [showSettings, setShowSettings] = useState(false);\n  const [currentlyPlaying, setCurrentlyPlaying] = useState(null);\n  const [devices, setDevices] = useState([]);\n  const [customTimerInput, setCustomTimerInput] = useState('');\n\n  // Refs for intervals\n  const timerIntervalRef = useRef(null);\n  const playbackIntervalRef = useRef(null);\n  const absoluteTimerRef = useRef(null);\n\n  // Initialize app\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const code = urlParams.get('code');\n    if (code) {\n      handleAuthCallback(code);\n    } else {\n      // Try to load stored tokens\n      const storedAccessToken = localStorage.getItem('spotify_access_token');\n      const storedRefreshToken = localStorage.getItem('spotify_refresh_token');\n      if (storedAccessToken) {\n        setAccessToken(storedAccessToken);\n        setRefreshToken(storedRefreshToken);\n      }\n    }\n\n    // Request notification permission\n    if ('Notification' in window) {\n      Notification.requestPermission().then(permission => {\n        setNotificationsEnabled(permission === 'granted');\n      });\n    }\n\n    // Initialize weekly schedule\n    initializeWeeklySchedule();\n  }, []);\n\n  // Load user profile when access token is available\n  useEffect(() => {\n    if (accessToken) {\n      loadUserProfile();\n      loadDevices();\n      loadTimerSettings();\n      setupAbsoluteTimeMonitoring();\n    }\n  }, [accessToken]);\n\n  // Timer effect\n  useEffect(() => {\n    if (isTimerRunning && !isPlaying && timeRemaining > 0) {\n      // Only count down when not playing a song\n      timerIntervalRef.current = setInterval(() => {\n        setTimeRemaining(prev => {\n          if (prev <= 1) {\n            // Timer reached zero - play track but don't reset timer yet\n            playCurrentTrack();\n            return 0; // Keep at zero while playing\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else {\n      if (timerIntervalRef.current) {\n        clearInterval(timerIntervalRef.current);\n      }\n    }\n    return () => {\n      if (timerIntervalRef.current) {\n        clearInterval(timerIntervalRef.current);\n      }\n    };\n  }, [isTimerRunning, isPlaying, timeRemaining, timerDuration]);\n\n  // Persist timer state\n  useEffect(() => {\n    if (user !== null && user !== void 0 && user.id) {\n      localStorage.setItem(`timer_state_${user.id}`, JSON.stringify({\n        timeRemaining,\n        isTimerRunning,\n        currentTrackIndex,\n        trackPositions,\n        weeklySchedule,\n        playbackTimingMode,\n        absoluteTimeMode,\n        absoluteTimeSlots\n      }));\n    }\n  }, [timeRemaining, isTimerRunning, currentTrackIndex, trackPositions, user === null || user === void 0 ? void 0 : user.id, weeklySchedule, playbackTimingMode, absoluteTimeMode, absoluteTimeSlots]);\n  const initializeWeeklySchedule = () => {\n    const schedule = {};\n    DAYS.forEach(day => {\n      schedule[day] = {\n        wholeDay: false,\n        timeSlots: {}\n      };\n      TIME_SLOTS.forEach(slot => {\n        schedule[day].timeSlots[slot] = false;\n      });\n    });\n    setWeeklySchedule(schedule);\n  };\n  const setupAbsoluteTimeMonitoring = () => {\n    if (absoluteTimeMode && (absoluteTimeSlots.hourly || absoluteTimeSlots.halfHourly || Object.keys(absoluteTimeSlots.custom).length > 0)) {\n      absoluteTimerRef.current = setInterval(() => {\n        const now = new Date();\n        const currentTime = `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`;\n        const currentDay = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][now.getDay()];\n\n        // Check if we should play based on absolute time settings\n        let shouldPlay = false;\n        if (absoluteTimeSlots.hourly && now.getMinutes() === 0) {\n          shouldPlay = true;\n        }\n        if (absoluteTimeSlots.halfHourly && now.getMinutes() === 30) {\n          shouldPlay = true;\n        }\n        if (absoluteTimeSlots.custom[currentTime]) {\n          shouldPlay = true;\n        }\n\n        // Check weekly schedule\n        if (shouldPlay && weeklySchedule[currentDay] && weeklySchedule[currentDay].timeSlots[currentTime]) {\n          playCurrentTrack();\n        }\n      }, 60000); // Check every minute\n    }\n    return () => {\n      if (absoluteTimerRef.current) {\n        clearInterval(absoluteTimerRef.current);\n      }\n    };\n  };\n  const handleAuthCallback = async code => {\n    try {\n      const response = await axios.get(`${API}/auth/callback?code=${code}`);\n      const {\n        access_token,\n        refresh_token\n      } = response.data;\n      setAccessToken(access_token);\n      setRefreshToken(refresh_token);\n      localStorage.setItem('spotify_access_token', access_token);\n      localStorage.setItem('spotify_refresh_token', refresh_token);\n\n      // Clean up URL\n      window.history.replaceState({}, document.title, '/');\n    } catch (error) {\n      console.error('Auth callback error:', error);\n      alert('Authentication failed. Please try again.');\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const response = await axios.get(`${API}/auth/login`);\n      window.location.href = response.data.auth_url;\n    } catch (error) {\n      console.error('Login error:', error);\n      alert('Failed to start login process');\n    }\n  };\n  const loadUserProfile = async () => {\n    try {\n      const response = await axios.get(`${API}/spotify/user?access_token=${accessToken}`);\n      setUser(response.data);\n\n      // Load saved timer state\n      const savedState = localStorage.getItem(`timer_state_${response.data.id}`);\n      if (savedState) {\n        const state = JSON.parse(savedState);\n        setTimeRemaining(state.timeRemaining || timerDuration * 60);\n        setCurrentTrackIndex(state.currentTrackIndex || 0);\n        setTrackPositions(state.trackPositions || {});\n        setWeeklySchedule(state.weeklySchedule || {});\n        setPlaybackTimingMode(state.playbackTimingMode || 'start');\n        setAbsoluteTimeMode(state.absoluteTimeMode || false);\n        setAbsoluteTimeSlots(state.absoluteTimeSlots || {\n          hourly: false,\n          halfHourly: false,\n          custom: {}\n        });\n      }\n    } catch (error) {\n      console.error('Failed to load user profile:', error);\n      // Token might be expired, try to refresh\n      if (refreshToken) {\n        await refreshAccessToken();\n      }\n    }\n  };\n  const refreshAccessToken = async () => {\n    try {\n      const response = await axios.post(`${API}/auth/refresh`, {\n        refresh_token: refreshToken\n      });\n      const {\n        access_token\n      } = response.data;\n      setAccessToken(access_token);\n      localStorage.setItem('spotify_access_token', access_token);\n    } catch (error) {\n      console.error('Token refresh failed:', error);\n      // Clear tokens and require re-login\n      localStorage.removeItem('spotify_access_token');\n      localStorage.removeItem('spotify_refresh_token');\n      setAccessToken(null);\n      setRefreshToken(null);\n    }\n  };\n  const loadDevices = async () => {\n    try {\n      const response = await axios.get(`${API}/spotify/devices?access_token=${accessToken}`);\n      setDevices(response.data.devices || []);\n    } catch (error) {\n      console.error('Failed to load devices:', error);\n    }\n  };\n  const loadTimerSettings = async () => {\n    if (!(user !== null && user !== void 0 && user.id)) return;\n    try {\n      const response = await axios.get(`${API}/timer/settings/${user.id}`);\n      const settings = response.data;\n      setTimerDuration(settings.timer_duration_minutes);\n      setPlayDuration(settings.play_duration_seconds);\n      setSelectedTracks(settings.selected_tracks);\n    } catch (error) {\n      console.error('Failed to load timer settings:', error);\n    }\n  };\n  const saveTimerSettings = async () => {\n    if (!(user !== null && user !== void 0 && user.id)) return;\n    try {\n      await axios.post(`${API}/timer/settings`, {\n        user_id: user.id,\n        timer_duration_minutes: timerDuration,\n        play_duration_seconds: playDuration,\n        selected_tracks: selectedTracks\n      });\n    } catch (error) {\n      console.error('Failed to save timer settings:', error);\n    }\n  };\n  const searchTracks = async () => {\n    if (!searchQuery.trim()) return;\n    setIsSearching(true);\n    try {\n      const response = await axios.get(`${API}/spotify/search?q=${encodeURIComponent(searchQuery)}&access_token=${accessToken}`);\n      setSearchResults(response.data.tracks || []);\n    } catch (error) {\n      console.error('Search failed:', error);\n      alert('Search failed. Please try again.');\n    } finally {\n      setIsSearching(false);\n    }\n  };\n  const selectTrack = track => {\n    if (selectedTracks.length >= 5) {\n      alert('You can only select up to 5 tracks');\n      return;\n    }\n    if (selectedTracks.find(t => t.id === track.id)) {\n      alert('Track already selected');\n      return;\n    }\n    const newTracks = [...selectedTracks, track];\n    setSelectedTracks(newTracks);\n    saveTimerSettings();\n  };\n  const removeTrack = trackId => {\n    const newTracks = selectedTracks.filter(t => t.id !== trackId);\n    setSelectedTracks(newTracks);\n    saveTimerSettings();\n  };\n  const playCurrentTrack = async () => {\n    if (selectedTracks.length === 0) {\n      if (notificationsEnabled) {\n        new Notification('Spotify Timer', {\n          body: 'Please select at least one track',\n          icon: '/favicon.ico'\n        });\n      }\n      return;\n    }\n    const track = selectedTracks[currentTrackIndex];\n    const savedPosition = trackPositions[track.uri] || 0;\n    try {\n      // First, try to get available devices\n      console.log('Getting available devices...');\n      const devicesResponse = await axios.get(`${API}/spotify/devices?access_token=${accessToken}`);\n      const availableDevices = devicesResponse.data.devices || [];\n      console.log('Available devices:', availableDevices);\n      if (availableDevices.length === 0) {\n        const message = 'No Spotify devices found. Please:\\n1. Open Spotify on your computer/phone\\n2. Play any song briefly to activate the device\\n3. Try again';\n        if (notificationsEnabled) {\n          new Notification('Spotify Timer - Device Error', {\n            body: message,\n            icon: '/favicon.ico'\n          });\n        } else {\n          alert(message);\n        }\n        return;\n      }\n\n      // Use the first available device\n      const targetDevice = availableDevices[0];\n      console.log('Using device:', targetDevice.name);\n\n      // Make sure the device is active by transferring playback to it\n      try {\n        await axios.put(`${API}/spotify/transfer-playback?access_token=${accessToken}`, {\n          device_ids: [targetDevice.id],\n          play: false\n        });\n\n        // Wait a moment for transfer to complete\n        await new Promise(resolve => setTimeout(resolve, 1000));\n      } catch (transferError) {\n        console.log('Playback transfer failed, continuing anyway:', transferError);\n      }\n\n      // Calculate position based on timing mode\n      let startPosition = savedPosition;\n      if (playbackTimingMode === 'end') {\n        // If mode is 'end', calculate from end of play duration\n        const endPosition = savedPosition + playDuration * 1000;\n        startPosition = Math.max(0, endPosition - playDuration * 1000);\n      }\n\n      // Now try to play the track\n      console.log(`Playing ${track.name} from position ${startPosition}ms`);\n      await axios.post(`${API}/spotify/play?access_token=${accessToken}`, {\n        track_uri: track.uri,\n        position_ms: startPosition,\n        device_id: targetDevice.id\n      });\n      setCurrentlyPlaying(track);\n      setIsPlaying(true); // Set playing state\n\n      if (notificationsEnabled) {\n        new Notification('Spotify Timer', {\n          body: `Now playing: ${track.name} for ${playDuration} seconds`,\n          icon: '/favicon.ico'\n        });\n      }\n\n      // Set up playback monitoring\n      playbackIntervalRef.current = setInterval(async () => {\n        try {\n          const response = await axios.get(`${API}/spotify/playback?access_token=${accessToken}`);\n          const state = response.data;\n          if (state.is_playing && state.track) {\n            const newPosition = state.progress_ms;\n            const playedDuration = newPosition - startPosition;\n\n            // Update track position\n            setTrackPositions(prev => ({\n              ...prev,\n              [track.uri]: newPosition\n            }));\n\n            // Save position to backend\n            await axios.post(`${API}/timer/track-position`, {\n              user_id: user.id,\n              track_uri: track.uri,\n              current_position_ms: newPosition\n            });\n\n            // Stop after play duration\n            if (playedDuration >= playDuration * 1000) {\n              await axios.post(`${API}/spotify/pause?access_token=${accessToken}&device_id=${targetDevice.id}`);\n              setCurrentlyPlaying(null);\n              setIsPlaying(false); // Song finished playing\n\n              // Move to next track for next cycle\n              setCurrentTrackIndex(prev => (prev + 1) % selectedTracks.length);\n\n              // NOW reset the timer for the next cycle (only if not in absolute mode)\n              if (!absoluteTimeMode) {\n                setTimeRemaining(timerDuration * 60);\n              }\n              clearInterval(playbackIntervalRef.current);\n              if (notificationsEnabled) {\n                new Notification('Spotify Timer', {\n                  body: `Finished playing ${track.name}. Timer reset for next cycle.`,\n                  icon: '/favicon.ico'\n                });\n              }\n            }\n          }\n        } catch (error) {\n          console.error('Playback monitoring error:', error);\n        }\n      }, 1000);\n    } catch (error) {\n      console.error('Playback failed:', error);\n      let errorMessage = 'Playback failed. ';\n      if (error.response) {\n        var _error$response$data, _error$response$data2;\n        // Server responded with error status\n        const status = error.response.status;\n        const detail = ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || ((_error$response$data2 = error.response.data) === null || _error$response$data2 === void 0 ? void 0 : _error$response$data2.message) || 'Unknown error';\n        if (status === 404) {\n          errorMessage = 'No active Spotify device found. Please:\\n1. Open Spotify on your computer/phone\\n2. Play any song briefly to activate the device\\n3. Try again';\n        } else if (status === 403) {\n          errorMessage = 'Playback failed. Make sure you have Spotify Premium - it\\'s required for remote control.';\n        } else {\n          errorMessage = `Playback failed (${status}): ${detail}\\n\\nTry:\\n1. Opening Spotify on another device\\n2. Playing a song briefly\\n3. Refreshing this page`;\n        }\n      } else if (error.request) {\n        // Network error\n        errorMessage = 'Network error. Please check your connection and try again.';\n      } else {\n        // Other error\n        errorMessage = `Playback failed: ${error.message}\\n\\nTry:\\n1. Opening Spotify on another device\\n2. Playing a song briefly\\n3. Refreshing this page`;\n      }\n      if (notificationsEnabled) {\n        new Notification('Spotify Timer - Error', {\n          body: errorMessage,\n          icon: '/favicon.ico'\n        });\n      } else {\n        alert(errorMessage);\n      }\n    }\n  };\n  const startTimer = () => {\n    if (selectedTracks.length === 0) {\n      alert('Please select at least one track');\n      return;\n    }\n    setIsTimerRunning(true);\n    saveTimerSettings();\n  };\n  const stopTimer = () => {\n    setIsTimerRunning(false);\n    if (playbackIntervalRef.current) {\n      clearInterval(playbackIntervalRef.current);\n    }\n  };\n  const fullStop = async () => {\n    setIsTimerRunning(false);\n    setIsPlaying(false);\n    setTimeRemaining(timerDuration * 60);\n    setCurrentTrackIndex(0);\n    setTrackPositions({});\n    setCurrentlyPlaying(null);\n    if (playbackIntervalRef.current) {\n      clearInterval(playbackIntervalRef.current);\n    }\n    try {\n      await axios.post(`${API}/spotify/pause?access_token=${accessToken}`);\n    } catch (error) {\n      console.error('Failed to pause:', error);\n    }\n  };\n  const applyCustomTimer = () => {\n    const minutes = parseFloat(customTimerInput);\n    if (minutes >= 0.1 && minutes <= 120) {\n      setTimerDuration(minutes);\n      setTimeRemaining(minutes * 60);\n      setCustomTimerInput('');\n      saveTimerSettings();\n    } else {\n      alert('Please enter a valid number between 0.1 and 120 minutes (0.1 = 6 seconds)');\n    }\n  };\n  const toggleWeeklyScheduleSlot = (day, timeSlot) => {\n    setWeeklySchedule(prev => ({\n      ...prev,\n      [day]: {\n        ...prev[day],\n        timeSlots: {\n          ...prev[day].timeSlots,\n          [timeSlot]: !prev[day].timeSlots[timeSlot]\n        }\n      }\n    }));\n  };\n  const toggleWholeDay = day => {\n    var _weeklySchedule$day;\n    const allSelected = !((_weeklySchedule$day = weeklySchedule[day]) !== null && _weeklySchedule$day !== void 0 && _weeklySchedule$day.wholeDay);\n    setWeeklySchedule(prev => {\n      const newTimeSlots = {};\n      TIME_SLOTS.forEach(slot => {\n        newTimeSlots[slot] = allSelected;\n      });\n      return {\n        ...prev,\n        [day]: {\n          wholeDay: allSelected,\n          timeSlots: newTimeSlots\n        }\n      };\n    });\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  const formatTrackDuration = ms => {\n    const seconds = Math.floor(ms / 1000);\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // If not authenticated, show login\n  if (!accessToken) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spotify-timer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"\\uD83C\\uDFB5 Spotify Timer Pro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Advanced timer with scheduling and mobile support\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogin,\n          className: \"spotify-login-btn\",\n          children: \"Login with Spotify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If no premium, show upgrade message\n  if (user && !user.is_premium) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spotify-timer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"premium-required\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Spotify Premium Required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This app requires Spotify Premium to control playback.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://www.spotify.com/premium/\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"upgrade-btn\",\n          children: \"Upgrade to Premium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            localStorage.clear();\n            window.location.reload();\n          },\n          className: \"logout-btn\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spotify-timer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83C\\uDFB5 Spotify Timer Pro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Welcome, \", user === null || user === void 0 ? void 0 : user.display_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"settings-btn\",\n          onClick: () => setShowSettings(!showSettings),\n          children: \"\\u2699\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeTab === 'timer' ? 'tab-btn active' : 'tab-btn',\n        onClick: () => setActiveTab('timer'),\n        children: \"Timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeTab === 'schedule' ? 'tab-btn active' : 'tab-btn',\n        onClick: () => setActiveTab('schedule'),\n        children: \"Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeTab === 'tracks' ? 'tab-btn active' : 'tab-btn',\n        onClick: () => setActiveTab('tracks'),\n        children: \"Tracks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 7\n    }, this), activeTab === 'timer' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-remaining\",\n          children: timeRemaining === 0 && isPlaying ? 'PLAYING...' : formatTime(timeRemaining)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-info\",\n          children: [\"Timer: \", timerDuration >= 1 ? `${timerDuration} min` : `${Math.round(timerDuration * 60)}s`, \" | Play: \", playDuration, \"s | Track: \", currentTrackIndex + 1, \"/\", selectedTracks.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-mode\",\n          children: [\"Mode: \", absoluteTimeMode ? 'Absolute Time' : 'Relative Timer', \" | Timing: \", playbackTimingMode === 'start' ? 'From Start' : 'From End']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 11\n      }, this), selectedTracks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-track\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Current Track:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-item\",\n          children: [((_selectedTracks$curre = selectedTracks[currentTrackIndex]) === null || _selectedTracks$curre === void 0 ? void 0 : (_selectedTracks$curre2 = _selectedTracks$curre.album) === null || _selectedTracks$curre2 === void 0 ? void 0 : (_selectedTracks$curre3 = _selectedTracks$curre2.images) === null || _selectedTracks$curre3 === void 0 ? void 0 : _selectedTracks$curre3[0]) && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedTracks[currentTrackIndex].album.images[0].url,\n            alt: selectedTracks[currentTrackIndex].name,\n            className: \"track-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"track-name\",\n              children: (_selectedTracks$curre4 = selectedTracks[currentTrackIndex]) === null || _selectedTracks$curre4 === void 0 ? void 0 : _selectedTracks$curre4.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 724,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"track-artist\",\n              children: (_selectedTracks$curre5 = selectedTracks[currentTrackIndex]) === null || _selectedTracks$curre5 === void 0 ? void 0 : (_selectedTracks$curre6 = _selectedTracks$curre5.artists) === null || _selectedTracks$curre6 === void 0 ? void 0 : _selectedTracks$curre6.map(a => a.name).join(', ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"track-position\",\n              children: [\"Position: \", formatTrackDuration(trackPositions[(_selectedTracks$curre7 = selectedTracks[currentTrackIndex]) === null || _selectedTracks$curre7 === void 0 ? void 0 : _selectedTracks$curre7.uri] || 0), \" /\", formatTrackDuration(((_selectedTracks$curre8 = selectedTracks[currentTrackIndex]) === null || _selectedTracks$curre8 === void 0 ? void 0 : _selectedTracks$curre8.duration_ms) || 0)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 15\n        }, this), currentlyPlaying && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"now-playing\",\n          children: [\"\\u25B6\\uFE0F Now Playing: \", playDuration, \"s segment\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startTimer,\n          disabled: isTimerRunning || selectedTracks.length === 0,\n          className: \"control-btn start-btn\",\n          children: \"START\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stopTimer,\n          disabled: !isTimerRunning,\n          className: \"control-btn stop-btn\",\n          children: \"STOP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fullStop,\n          className: \"control-btn full-stop-btn\",\n          children: \"FULL STOP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 11\n      }, this), showSettings && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Advanced Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Timer Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 773,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toggle-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setAbsoluteTimeMode(false),\n              className: !absoluteTimeMode ? 'toggle-btn active' : 'toggle-btn',\n              children: \"Relative Timer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setAbsoluteTimeMode(true),\n              className: absoluteTimeMode ? 'toggle-btn active' : 'toggle-btn',\n              children: \"Absolute Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 781,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Cycle Calculation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toggle-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setPlaybackTimingMode('start'),\n              className: playbackTimingMode === 'start' ? 'toggle-btn active' : 'toggle-btn',\n              children: \"From Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 794,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setPlaybackTimingMode('end'),\n              className: playbackTimingMode === 'end' ? 'toggle-btn active' : 'toggle-btn',\n              children: \"From End\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 800,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"From Start: Timer starts when song begins | From End: Timer starts when song ends\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 15\n        }, this), absoluteTimeMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Absolute Time Slots\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 813,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: absoluteTimeSlots.hourly,\n                onChange: e => setAbsoluteTimeSlots(prev => ({\n                  ...prev,\n                  hourly: e.target.checked\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 816,\n                columnNumber: 23\n              }, this), \"Every Hour (00:00)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 815,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: absoluteTimeSlots.halfHourly,\n                onChange: e => setAbsoluteTimeSlots(prev => ({\n                  ...prev,\n                  halfHourly: e.target.checked\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 827,\n                columnNumber: 23\n              }, this), \"Every Half Hour (30:00)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 826,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-group\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: notificationsEnabled,\n              onChange: e => setNotificationsEnabled(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 844,\n              columnNumber: 19\n            }, this), \"Enable Notifications\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 843,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 15\n        }, this), !absoluteTimeMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Timer Duration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 856,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timer-presets\",\n            children: TIMER_PRESETS.map(preset => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setTimerDuration(preset.value);\n                setTimeRemaining(preset.value * 60);\n                saveTimerSettings();\n              },\n              className: Math.abs(timerDuration - preset.value) < 0.1 ? 'preset-btn active' : 'preset-btn',\n              children: preset.label\n            }, preset.label, false, {\n              fileName: _jsxFileName,\n              lineNumber: 859,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 857,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-timer\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: customTimerInput,\n              onChange: e => setCustomTimerInput(e.target.value),\n              placeholder: \"Custom minutes (0.1-120)\",\n              min: \"0.1\",\n              max: \"120\",\n              step: \"0.1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 873,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: applyCustomTimer,\n              className: \"apply-btn\",\n              children: \"Apply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 882,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 872,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Play Duration (seconds)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 889,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"10\",\n            max: \"60\",\n            value: playDuration,\n            onChange: e => {\n              setPlayDuration(parseInt(e.target.value));\n              saveTimerSettings();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 890,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [playDuration, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 900,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 888,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 9\n    }, this), activeTab === 'schedule' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"schedule-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Weekly Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 910,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select when the timer should be active (7:00 AM - 5:00 PM, Monday-Friday)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 911,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weekly-schedule\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"schedule-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-label\",\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 915,\n            columnNumber: 15\n          }, this), DAYS.map(day => {\n            var _weeklySchedule$day2;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"day-name\",\n                children: day.substring(0, 3)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 918,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"whole-day-checkbox\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: ((_weeklySchedule$day2 = weeklySchedule[day]) === null || _weeklySchedule$day2 === void 0 ? void 0 : _weeklySchedule$day2.wholeDay) || false,\n                  onChange: () => toggleWholeDay(day)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 920,\n                  columnNumber: 21\n                }, this), \"Whole Day\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 919,\n                columnNumber: 19\n              }, this)]\n            }, day, true, {\n              fileName: _jsxFileName,\n              lineNumber: 917,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 914,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"schedule-grid\",\n          children: TIME_SLOTS.map(timeSlot => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"schedule-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time-slot-label\",\n              children: timeSlot\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 934,\n              columnNumber: 19\n            }, this), DAYS.map(day => {\n              var _weeklySchedule$day3, _weeklySchedule$day3$;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"schedule-cell\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: ((_weeklySchedule$day3 = weeklySchedule[day]) === null || _weeklySchedule$day3 === void 0 ? void 0 : (_weeklySchedule$day3$ = _weeklySchedule$day3.timeSlots) === null || _weeklySchedule$day3$ === void 0 ? void 0 : _weeklySchedule$day3$[timeSlot]) || false,\n                  onChange: () => toggleWeeklyScheduleSlot(day, timeSlot),\n                  className: \"schedule-checkbox\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 937,\n                  columnNumber: 23\n                }, this)\n              }, `${day}-${timeSlot}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 936,\n                columnNumber: 21\n              }, this);\n            })]\n          }, timeSlot, true, {\n            fileName: _jsxFileName,\n            lineNumber: 933,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 931,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 909,\n      columnNumber: 9\n    }, this), activeTab === 'tracks' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Selected Tracks (\", selectedTracks.length, \"/5)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 955,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: searchQuery,\n            onChange: e => setSearchQuery(e.target.value),\n            placeholder: \"Search for tracks...\",\n            onKeyPress: e => e.key === 'Enter' && searchTracks()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 960,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: searchTracks,\n            disabled: isSearching,\n            children: isSearching ? 'Searching...' : 'Search'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 967,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 959,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 958,\n        columnNumber: 11\n      }, this), selectedTracks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-tracks\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Your Tracks:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 976,\n          columnNumber: 15\n        }, this), selectedTracks.map((track, index) => {\n          var _track$album, _track$album$images, _track$artists;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track-item selected\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"track-number\",\n              children: [index + 1, \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 979,\n              columnNumber: 19\n            }, this), ((_track$album = track.album) === null || _track$album === void 0 ? void 0 : (_track$album$images = _track$album.images) === null || _track$album$images === void 0 ? void 0 : _track$album$images[2]) && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: track.album.images[2].url,\n              alt: track.name,\n              className: \"track-image-small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 981,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"track-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track-name\",\n                children: track.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 984,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track-artist\",\n                children: (_track$artists = track.artists) === null || _track$artists === void 0 ? void 0 : _track$artists.map(a => a.name).join(', ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 985,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 983,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeTrack(track.id),\n              className: \"remove-btn\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 987,\n              columnNumber: 19\n            }, this)]\n          }, track.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 978,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 975,\n        columnNumber: 13\n      }, this), searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Search Results:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 996,\n          columnNumber: 15\n        }, this), searchResults.map(track => {\n          var _track$album2, _track$album2$images, _track$artists2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track-item\",\n            children: [((_track$album2 = track.album) === null || _track$album2 === void 0 ? void 0 : (_track$album2$images = _track$album2.images) === null || _track$album2$images === void 0 ? void 0 : _track$album2$images[2]) && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: track.album.images[2].url,\n              alt: track.name,\n              className: \"track-image-small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1000,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"track-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track-name\",\n                children: track.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1003,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track-artist\",\n                children: (_track$artists2 = track.artists) === null || _track$artists2 === void 0 ? void 0 : _track$artists2.map(a => a.name).join(', ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1004,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track-duration\",\n                children: formatTrackDuration(track.duration_ms)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1005,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1002,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => selectTrack(track),\n              disabled: selectedTracks.length >= 5 || selectedTracks.find(t => t.id === track.id),\n              className: \"select-btn\",\n              children: selectedTracks.find(t => t.id === track.id) ? 'Selected' : 'Select'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1007,\n              columnNumber: 19\n            }, this)]\n          }, track.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 998,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 995,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 954,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 657,\n    columnNumber: 5\n  }, this);\n};\n_s(SpotifyTimer, \"YWu1oEuqfJOnqIpXdRkm1pVE5Sc=\");\n_c = SpotifyTimer;\nexport default SpotifyTimer;\nvar _c;\n$RefreshReg$(_c, \"SpotifyTimer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","BACKEND_URL","process","env","REACT_APP_BACKEND_URL","API","TIMER_PRESETS","label","value","unit","DAYS","generateTimeSlots","slots","hour","push","toString","padStart","TIME_SLOTS","SpotifyTimer","_s","_selectedTracks$curre","_selectedTracks$curre2","_selectedTracks$curre3","_selectedTracks$curre4","_selectedTracks$curre5","_selectedTracks$curre6","_selectedTracks$curre7","_selectedTracks$curre8","accessToken","setAccessToken","refreshToken","setRefreshToken","user","setUser","searchQuery","setSearchQuery","searchResults","setSearchResults","selectedTracks","setSelectedTracks","isSearching","setIsSearching","timerDuration","setTimerDuration","playDuration","setPlayDuration","timeRemaining","setTimeRemaining","isTimerRunning","setIsTimerRunning","isPlaying","setIsPlaying","currentTrackIndex","setCurrentTrackIndex","trackPositions","setTrackPositions","activeTab","setActiveTab","weeklySchedule","setWeeklySchedule","playbackTimingMode","setPlaybackTimingMode","absoluteTimeMode","setAbsoluteTimeMode","absoluteTimeSlots","setAbsoluteTimeSlots","hourly","halfHourly","custom","notificationsEnabled","setNotificationsEnabled","showSettings","setShowSettings","currentlyPlaying","setCurrentlyPlaying","devices","setDevices","customTimerInput","setCustomTimerInput","timerIntervalRef","playbackIntervalRef","absoluteTimerRef","urlParams","URLSearchParams","window","location","search","code","get","handleAuthCallback","storedAccessToken","localStorage","getItem","storedRefreshToken","Notification","requestPermission","then","permission","initializeWeeklySchedule","loadUserProfile","loadDevices","loadTimerSettings","setupAbsoluteTimeMonitoring","current","setInterval","prev","playCurrentTrack","clearInterval","id","setItem","JSON","stringify","schedule","forEach","day","wholeDay","timeSlots","slot","Object","keys","length","now","Date","currentTime","getHours","getMinutes","currentDay","getDay","shouldPlay","response","access_token","refresh_token","data","history","replaceState","document","title","error","console","alert","handleLogin","href","auth_url","savedState","state","parse","refreshAccessToken","post","removeItem","settings","timer_duration_minutes","play_duration_seconds","selected_tracks","saveTimerSettings","user_id","searchTracks","trim","encodeURIComponent","tracks","selectTrack","track","find","t","newTracks","removeTrack","trackId","filter","body","icon","savedPosition","uri","log","devicesResponse","availableDevices","message","targetDevice","name","put","device_ids","play","Promise","resolve","setTimeout","transferError","startPosition","endPosition","Math","max","track_uri","position_ms","device_id","is_playing","newPosition","progress_ms","playedDuration","current_position_ms","errorMessage","_error$response$data","_error$response$data2","status","detail","request","startTimer","stopTimer","fullStop","applyCustomTimer","minutes","parseFloat","toggleWeeklyScheduleSlot","timeSlot","toggleWholeDay","_weeklySchedule$day","allSelected","newTimeSlots","formatTime","seconds","mins","floor","secs","formatTrackDuration","ms","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","is_premium","target","rel","clear","reload","display_name","round","album","images","src","url","alt","artists","map","a","join","duration_ms","disabled","type","checked","onChange","e","preset","abs","placeholder","min","step","parseInt","_weeklySchedule$day2","substring","_weeklySchedule$day3","_weeklySchedule$day3$","onKeyPress","key","index","_track$album","_track$album$images","_track$artists","_track$album2","_track$album2$images","_track$artists2","_c","$RefreshReg$"],"sources":["/app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\nconst API = `${BACKEND_URL}/api`;\n\n// Timer presets in minutes and seconds for easy testing\nconst TIMER_PRESETS = [\n  { label: \"10s\", value: 10/60, unit: \"seconds\" },\n  { label: \"30s\", value: 30/60, unit: \"seconds\" },\n  { label: \"1m\", value: 1, unit: \"minutes\" },\n  { label: \"5m\", value: 5, unit: \"minutes\" },\n  { label: \"10m\", value: 10, unit: \"minutes\" },\n  { label: \"15m\", value: 15, unit: \"minutes\" },\n  { label: \"30m\", value: 30, unit: \"minutes\" },\n  { label: \"45m\", value: 45, unit: \"minutes\" },\n  { label: \"60m\", value: 60, unit: \"minutes\" }\n];\n\n// Days of the week\nconst DAYS = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n\n// Time slots from 7:00 to 17:00 (30-min intervals)\nconst generateTimeSlots = () => {\n  const slots = [];\n  for (let hour = 7; hour <= 17; hour++) {\n    slots.push(`${hour.toString().padStart(2, '0')}:00`);\n    if (hour < 17) {\n      slots.push(`${hour.toString().padStart(2, '0')}:30`);\n    }\n  }\n  return slots;\n};\n\nconst TIME_SLOTS = generateTimeSlots();\n\nconst SpotifyTimer = () => {\n  // Authentication state\n  const [accessToken, setAccessToken] = useState(null);\n  const [refreshToken, setRefreshToken] = useState(null);\n  const [user, setUser] = useState(null);\n\n  // Track selection state\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [selectedTracks, setSelectedTracks] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n\n  // Timer state\n  const [timerDuration, setTimerDuration] = useState(30); // minutes\n  const [playDuration, setPlayDuration] = useState(30); // seconds\n  const [timeRemaining, setTimeRemaining] = useState(30 * 60); // seconds\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false); // New state to track if song is playing\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const [trackPositions, setTrackPositions] = useState({}); // Store position for each track\n\n  // New enhanced features\n  const [activeTab, setActiveTab] = useState('timer'); // timer, schedule, settings\n  const [weeklySchedule, setWeeklySchedule] = useState({});\n  const [playbackTimingMode, setPlaybackTimingMode] = useState('start'); // 'start' or 'end'\n  const [absoluteTimeMode, setAbsoluteTimeMode] = useState(false);\n  const [absoluteTimeSlots, setAbsoluteTimeSlots] = useState({\n    hourly: false,\n    halfHourly: false,\n    custom: {}\n  });\n  const [notificationsEnabled, setNotificationsEnabled] = useState(false);\n\n  // UI state\n  const [showSettings, setShowSettings] = useState(false);\n  const [currentlyPlaying, setCurrentlyPlaying] = useState(null);\n  const [devices, setDevices] = useState([]);\n  const [customTimerInput, setCustomTimerInput] = useState('');\n\n  // Refs for intervals\n  const timerIntervalRef = useRef(null);\n  const playbackIntervalRef = useRef(null);\n  const absoluteTimerRef = useRef(null);\n\n  // Initialize app\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const code = urlParams.get('code');\n    \n    if (code) {\n      handleAuthCallback(code);\n    } else {\n      // Try to load stored tokens\n      const storedAccessToken = localStorage.getItem('spotify_access_token');\n      const storedRefreshToken = localStorage.getItem('spotify_refresh_token');\n      \n      if (storedAccessToken) {\n        setAccessToken(storedAccessToken);\n        setRefreshToken(storedRefreshToken);\n      }\n    }\n\n    // Request notification permission\n    if ('Notification' in window) {\n      Notification.requestPermission().then(permission => {\n        setNotificationsEnabled(permission === 'granted');\n      });\n    }\n\n    // Initialize weekly schedule\n    initializeWeeklySchedule();\n  }, []);\n\n  // Load user profile when access token is available\n  useEffect(() => {\n    if (accessToken) {\n      loadUserProfile();\n      loadDevices();\n      loadTimerSettings();\n      setupAbsoluteTimeMonitoring();\n    }\n  }, [accessToken]);\n\n  // Timer effect\n  useEffect(() => {\n    if (isTimerRunning && !isPlaying && timeRemaining > 0) {\n      // Only count down when not playing a song\n      timerIntervalRef.current = setInterval(() => {\n        setTimeRemaining(prev => {\n          if (prev <= 1) {\n            // Timer reached zero - play track but don't reset timer yet\n            playCurrentTrack();\n            return 0; // Keep at zero while playing\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else {\n      if (timerIntervalRef.current) {\n        clearInterval(timerIntervalRef.current);\n      }\n    }\n\n    return () => {\n      if (timerIntervalRef.current) {\n        clearInterval(timerIntervalRef.current);\n      }\n    };\n  }, [isTimerRunning, isPlaying, timeRemaining, timerDuration]);\n\n  // Persist timer state\n  useEffect(() => {\n    if (user?.id) {\n      localStorage.setItem(`timer_state_${user.id}`, JSON.stringify({\n        timeRemaining,\n        isTimerRunning,\n        currentTrackIndex,\n        trackPositions,\n        weeklySchedule,\n        playbackTimingMode,\n        absoluteTimeMode,\n        absoluteTimeSlots\n      }));\n    }\n  }, [timeRemaining, isTimerRunning, currentTrackIndex, trackPositions, user?.id, weeklySchedule, playbackTimingMode, absoluteTimeMode, absoluteTimeSlots]);\n\n  const initializeWeeklySchedule = () => {\n    const schedule = {};\n    DAYS.forEach(day => {\n      schedule[day] = {\n        wholeDay: false,\n        timeSlots: {}\n      };\n      TIME_SLOTS.forEach(slot => {\n        schedule[day].timeSlots[slot] = false;\n      });\n    });\n    setWeeklySchedule(schedule);\n  };\n\n  const setupAbsoluteTimeMonitoring = () => {\n    if (absoluteTimeMode && (absoluteTimeSlots.hourly || absoluteTimeSlots.halfHourly || Object.keys(absoluteTimeSlots.custom).length > 0)) {\n      absoluteTimerRef.current = setInterval(() => {\n        const now = new Date();\n        const currentTime = `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`;\n        const currentDay = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][now.getDay()];\n        \n        // Check if we should play based on absolute time settings\n        let shouldPlay = false;\n        \n        if (absoluteTimeSlots.hourly && now.getMinutes() === 0) {\n          shouldPlay = true;\n        }\n        \n        if (absoluteTimeSlots.halfHourly && now.getMinutes() === 30) {\n          shouldPlay = true;\n        }\n        \n        if (absoluteTimeSlots.custom[currentTime]) {\n          shouldPlay = true;\n        }\n        \n        // Check weekly schedule\n        if (shouldPlay && weeklySchedule[currentDay] && weeklySchedule[currentDay].timeSlots[currentTime]) {\n          playCurrentTrack();\n        }\n      }, 60000); // Check every minute\n    }\n    \n    return () => {\n      if (absoluteTimerRef.current) {\n        clearInterval(absoluteTimerRef.current);\n      }\n    };\n  };\n\n  const handleAuthCallback = async (code) => {\n    try {\n      const response = await axios.get(`${API}/auth/callback?code=${code}`);\n      const { access_token, refresh_token } = response.data;\n      \n      setAccessToken(access_token);\n      setRefreshToken(refresh_token);\n      \n      localStorage.setItem('spotify_access_token', access_token);\n      localStorage.setItem('spotify_refresh_token', refresh_token);\n      \n      // Clean up URL\n      window.history.replaceState({}, document.title, '/');\n    } catch (error) {\n      console.error('Auth callback error:', error);\n      alert('Authentication failed. Please try again.');\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      const response = await axios.get(`${API}/auth/login`);\n      window.location.href = response.data.auth_url;\n    } catch (error) {\n      console.error('Login error:', error);\n      alert('Failed to start login process');\n    }\n  };\n\n  const loadUserProfile = async () => {\n    try {\n      const response = await axios.get(`${API}/spotify/user?access_token=${accessToken}`);\n      setUser(response.data);\n      \n      // Load saved timer state\n      const savedState = localStorage.getItem(`timer_state_${response.data.id}`);\n      if (savedState) {\n        const state = JSON.parse(savedState);\n        setTimeRemaining(state.timeRemaining || timerDuration * 60);\n        setCurrentTrackIndex(state.currentTrackIndex || 0);\n        setTrackPositions(state.trackPositions || {});\n        setWeeklySchedule(state.weeklySchedule || {});\n        setPlaybackTimingMode(state.playbackTimingMode || 'start');\n        setAbsoluteTimeMode(state.absoluteTimeMode || false);\n        setAbsoluteTimeSlots(state.absoluteTimeSlots || { hourly: false, halfHourly: false, custom: {} });\n      }\n    } catch (error) {\n      console.error('Failed to load user profile:', error);\n      // Token might be expired, try to refresh\n      if (refreshToken) {\n        await refreshAccessToken();\n      }\n    }\n  };\n\n  const refreshAccessToken = async () => {\n    try {\n      const response = await axios.post(`${API}/auth/refresh`, { refresh_token: refreshToken });\n      const { access_token } = response.data;\n      setAccessToken(access_token);\n      localStorage.setItem('spotify_access_token', access_token);\n    } catch (error) {\n      console.error('Token refresh failed:', error);\n      // Clear tokens and require re-login\n      localStorage.removeItem('spotify_access_token');\n      localStorage.removeItem('spotify_refresh_token');\n      setAccessToken(null);\n      setRefreshToken(null);\n    }\n  };\n\n  const loadDevices = async () => {\n    try {\n      const response = await axios.get(`${API}/spotify/devices?access_token=${accessToken}`);\n      setDevices(response.data.devices || []);\n    } catch (error) {\n      console.error('Failed to load devices:', error);\n    }\n  };\n\n  const loadTimerSettings = async () => {\n    if (!user?.id) return;\n    \n    try {\n      const response = await axios.get(`${API}/timer/settings/${user.id}`);\n      const settings = response.data;\n      \n      setTimerDuration(settings.timer_duration_minutes);\n      setPlayDuration(settings.play_duration_seconds);\n      setSelectedTracks(settings.selected_tracks);\n    } catch (error) {\n      console.error('Failed to load timer settings:', error);\n    }\n  };\n\n  const saveTimerSettings = async () => {\n    if (!user?.id) return;\n    \n    try {\n      await axios.post(`${API}/timer/settings`, {\n        user_id: user.id,\n        timer_duration_minutes: timerDuration,\n        play_duration_seconds: playDuration,\n        selected_tracks: selectedTracks\n      });\n    } catch (error) {\n      console.error('Failed to save timer settings:', error);\n    }\n  };\n\n  const searchTracks = async () => {\n    if (!searchQuery.trim()) return;\n    \n    setIsSearching(true);\n    try {\n      const response = await axios.get(`${API}/spotify/search?q=${encodeURIComponent(searchQuery)}&access_token=${accessToken}`);\n      setSearchResults(response.data.tracks || []);\n    } catch (error) {\n      console.error('Search failed:', error);\n      alert('Search failed. Please try again.');\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  const selectTrack = (track) => {\n    if (selectedTracks.length >= 5) {\n      alert('You can only select up to 5 tracks');\n      return;\n    }\n    \n    if (selectedTracks.find(t => t.id === track.id)) {\n      alert('Track already selected');\n      return;\n    }\n    \n    const newTracks = [...selectedTracks, track];\n    setSelectedTracks(newTracks);\n    saveTimerSettings();\n  };\n\n  const removeTrack = (trackId) => {\n    const newTracks = selectedTracks.filter(t => t.id !== trackId);\n    setSelectedTracks(newTracks);\n    saveTimerSettings();\n  };\n\n  const playCurrentTrack = async () => {\n    if (selectedTracks.length === 0) {\n      if (notificationsEnabled) {\n        new Notification('Spotify Timer', {\n          body: 'Please select at least one track',\n          icon: '/favicon.ico'\n        });\n      }\n      return;\n    }\n    \n    const track = selectedTracks[currentTrackIndex];\n    const savedPosition = trackPositions[track.uri] || 0;\n    \n    try {\n      // First, try to get available devices\n      console.log('Getting available devices...');\n      const devicesResponse = await axios.get(`${API}/spotify/devices?access_token=${accessToken}`);\n      const availableDevices = devicesResponse.data.devices || [];\n      \n      console.log('Available devices:', availableDevices);\n      \n      if (availableDevices.length === 0) {\n        const message = 'No Spotify devices found. Please:\\n1. Open Spotify on your computer/phone\\n2. Play any song briefly to activate the device\\n3. Try again';\n        if (notificationsEnabled) {\n          new Notification('Spotify Timer - Device Error', {\n            body: message,\n            icon: '/favicon.ico'\n          });\n        } else {\n          alert(message);\n        }\n        return;\n      }\n      \n      // Use the first available device\n      const targetDevice = availableDevices[0];\n      console.log('Using device:', targetDevice.name);\n      \n      // Make sure the device is active by transferring playback to it\n      try {\n        await axios.put(`${API}/spotify/transfer-playback?access_token=${accessToken}`, {\n          device_ids: [targetDevice.id],\n          play: false\n        });\n        \n        // Wait a moment for transfer to complete\n        await new Promise(resolve => setTimeout(resolve, 1000));\n      } catch (transferError) {\n        console.log('Playback transfer failed, continuing anyway:', transferError);\n      }\n      \n      // Calculate position based on timing mode\n      let startPosition = savedPosition;\n      if (playbackTimingMode === 'end') {\n        // If mode is 'end', calculate from end of play duration\n        const endPosition = savedPosition + (playDuration * 1000);\n        startPosition = Math.max(0, endPosition - (playDuration * 1000));\n      }\n      \n      // Now try to play the track\n      console.log(`Playing ${track.name} from position ${startPosition}ms`);\n      await axios.post(`${API}/spotify/play?access_token=${accessToken}`, {\n        track_uri: track.uri,\n        position_ms: startPosition,\n        device_id: targetDevice.id\n      });\n      \n      setCurrentlyPlaying(track);\n      setIsPlaying(true); // Set playing state\n      \n      if (notificationsEnabled) {\n        new Notification('Spotify Timer', {\n          body: `Now playing: ${track.name} for ${playDuration} seconds`,\n          icon: '/favicon.ico'\n        });\n      }\n      \n      // Set up playback monitoring\n      playbackIntervalRef.current = setInterval(async () => {\n        try {\n          const response = await axios.get(`${API}/spotify/playback?access_token=${accessToken}`);\n          const state = response.data;\n          \n          if (state.is_playing && state.track) {\n            const newPosition = state.progress_ms;\n            const playedDuration = newPosition - startPosition;\n            \n            // Update track position\n            setTrackPositions(prev => ({\n              ...prev,\n              [track.uri]: newPosition\n            }));\n            \n            // Save position to backend\n            await axios.post(`${API}/timer/track-position`, {\n              user_id: user.id,\n              track_uri: track.uri,\n              current_position_ms: newPosition\n            });\n            \n            // Stop after play duration\n            if (playedDuration >= playDuration * 1000) {\n              await axios.post(`${API}/spotify/pause?access_token=${accessToken}&device_id=${targetDevice.id}`);\n              setCurrentlyPlaying(null);\n              setIsPlaying(false); // Song finished playing\n              \n              // Move to next track for next cycle\n              setCurrentTrackIndex(prev => (prev + 1) % selectedTracks.length);\n              \n              // NOW reset the timer for the next cycle (only if not in absolute mode)\n              if (!absoluteTimeMode) {\n                setTimeRemaining(timerDuration * 60);\n              }\n              \n              clearInterval(playbackIntervalRef.current);\n              \n              if (notificationsEnabled) {\n                new Notification('Spotify Timer', {\n                  body: `Finished playing ${track.name}. Timer reset for next cycle.`,\n                  icon: '/favicon.ico'\n                });\n              }\n            }\n          }\n        } catch (error) {\n          console.error('Playback monitoring error:', error);\n        }\n      }, 1000);\n      \n    } catch (error) {\n      console.error('Playback failed:', error);\n      \n      let errorMessage = 'Playback failed. ';\n      \n      if (error.response) {\n        // Server responded with error status\n        const status = error.response.status;\n        const detail = error.response.data?.detail || error.response.data?.message || 'Unknown error';\n        \n        if (status === 404) {\n          errorMessage = 'No active Spotify device found. Please:\\n1. Open Spotify on your computer/phone\\n2. Play any song briefly to activate the device\\n3. Try again';\n        } else if (status === 403) {\n          errorMessage = 'Playback failed. Make sure you have Spotify Premium - it\\'s required for remote control.';\n        } else {\n          errorMessage = `Playback failed (${status}): ${detail}\\n\\nTry:\\n1. Opening Spotify on another device\\n2. Playing a song briefly\\n3. Refreshing this page`;\n        }\n      } else if (error.request) {\n        // Network error\n        errorMessage = 'Network error. Please check your connection and try again.';\n      } else {\n        // Other error\n        errorMessage = `Playback failed: ${error.message}\\n\\nTry:\\n1. Opening Spotify on another device\\n2. Playing a song briefly\\n3. Refreshing this page`;\n      }\n      \n      if (notificationsEnabled) {\n        new Notification('Spotify Timer - Error', {\n          body: errorMessage,\n          icon: '/favicon.ico'\n        });\n      } else {\n        alert(errorMessage);\n      }\n    }\n  };\n\n  const startTimer = () => {\n    if (selectedTracks.length === 0) {\n      alert('Please select at least one track');\n      return;\n    }\n    setIsTimerRunning(true);\n    saveTimerSettings();\n  };\n\n  const stopTimer = () => {\n    setIsTimerRunning(false);\n    if (playbackIntervalRef.current) {\n      clearInterval(playbackIntervalRef.current);\n    }\n  };\n\n  const fullStop = async () => {\n    setIsTimerRunning(false);\n    setIsPlaying(false);\n    setTimeRemaining(timerDuration * 60);\n    setCurrentTrackIndex(0);\n    setTrackPositions({});\n    setCurrentlyPlaying(null);\n    \n    if (playbackIntervalRef.current) {\n      clearInterval(playbackIntervalRef.current);\n    }\n    \n    try {\n      await axios.post(`${API}/spotify/pause?access_token=${accessToken}`);\n    } catch (error) {\n      console.error('Failed to pause:', error);\n    }\n  };\n\n  const applyCustomTimer = () => {\n    const minutes = parseFloat(customTimerInput);\n    if (minutes >= 0.1 && minutes <= 120) {\n      setTimerDuration(minutes);\n      setTimeRemaining(minutes * 60);\n      setCustomTimerInput('');\n      saveTimerSettings();\n    } else {\n      alert('Please enter a valid number between 0.1 and 120 minutes (0.1 = 6 seconds)');\n    }\n  };\n\n  const toggleWeeklyScheduleSlot = (day, timeSlot) => {\n    setWeeklySchedule(prev => ({\n      ...prev,\n      [day]: {\n        ...prev[day],\n        timeSlots: {\n          ...prev[day].timeSlots,\n          [timeSlot]: !prev[day].timeSlots[timeSlot]\n        }\n      }\n    }));\n  };\n\n  const toggleWholeDay = (day) => {\n    const allSelected = !weeklySchedule[day]?.wholeDay;\n    setWeeklySchedule(prev => {\n      const newTimeSlots = {};\n      TIME_SLOTS.forEach(slot => {\n        newTimeSlots[slot] = allSelected;\n      });\n      \n      return {\n        ...prev,\n        [day]: {\n          wholeDay: allSelected,\n          timeSlots: newTimeSlots\n        }\n      };\n    });\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const formatTrackDuration = (ms) => {\n    const seconds = Math.floor(ms / 1000);\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // If not authenticated, show login\n  if (!accessToken) {\n    return (\n      <div className=\"spotify-timer\">\n        <div className=\"login-container\">\n          <div className=\"logo\">\n            <h1>🎵 Spotify Timer Pro</h1>\n            <p>Advanced timer with scheduling and mobile support</p>\n          </div>\n          <button onClick={handleLogin} className=\"spotify-login-btn\">\n            Login with Spotify\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // If no premium, show upgrade message\n  if (user && !user.is_premium) {\n    return (\n      <div className=\"spotify-timer\">\n        <div className=\"premium-required\">\n          <h2>Spotify Premium Required</h2>\n          <p>This app requires Spotify Premium to control playback.</p>\n          <a href=\"https://www.spotify.com/premium/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"upgrade-btn\">\n            Upgrade to Premium\n          </a>\n          <button onClick={() => {\n            localStorage.clear();\n            window.location.reload();\n          }} className=\"logout-btn\">\n            Logout\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"spotify-timer\">\n      {/* Header */}\n      <div className=\"header\">\n        <h1>🎵 Spotify Timer Pro</h1>\n        <div className=\"user-info\">\n          <span>Welcome, {user?.display_name}</span>\n          <button \n            className=\"settings-btn\"\n            onClick={() => setShowSettings(!showSettings)}\n          >\n            ⚙️\n          </button>\n        </div>\n      </div>\n\n      {/* Navigation Tabs */}\n      <div className=\"tab-navigation\">\n        <button \n          className={activeTab === 'timer' ? 'tab-btn active' : 'tab-btn'}\n          onClick={() => setActiveTab('timer')}\n        >\n          Timer\n        </button>\n        <button \n          className={activeTab === 'schedule' ? 'tab-btn active' : 'tab-btn'}\n          onClick={() => setActiveTab('schedule')}\n        >\n          Schedule\n        </button>\n        <button \n          className={activeTab === 'tracks' ? 'tab-btn active' : 'tab-btn'}\n          onClick={() => setActiveTab('tracks')}\n        >\n          Tracks\n        </button>\n      </div>\n\n      {/* Timer Tab */}\n      {activeTab === 'timer' && (\n        <div className=\"timer-section\">\n          {/* Timer Display */}\n          <div className=\"timer-display\">\n            <div className=\"time-remaining\">\n              {timeRemaining === 0 && isPlaying ? 'PLAYING...' : formatTime(timeRemaining)}\n            </div>\n            <div className=\"timer-info\">\n              Timer: {timerDuration >= 1 ? `${timerDuration} min` : `${Math.round(timerDuration * 60)}s`} | Play: {playDuration}s | Track: {currentTrackIndex + 1}/{selectedTracks.length}\n            </div>\n            <div className=\"timer-mode\">\n              Mode: {absoluteTimeMode ? 'Absolute Time' : 'Relative Timer'} | \n              Timing: {playbackTimingMode === 'start' ? 'From Start' : 'From End'}\n            </div>\n          </div>\n\n          {/* Current Track Info */}\n          {selectedTracks.length > 0 && (\n            <div className=\"current-track\">\n              <h3>Current Track:</h3>\n              <div className=\"track-item\">\n                {selectedTracks[currentTrackIndex]?.album?.images?.[0] && (\n                  <img \n                    src={selectedTracks[currentTrackIndex].album.images[0].url} \n                    alt={selectedTracks[currentTrackIndex].name}\n                    className=\"track-image\"\n                  />\n                )}\n                <div className=\"track-details\">\n                  <div className=\"track-name\">{selectedTracks[currentTrackIndex]?.name}</div>\n                  <div className=\"track-artist\">\n                    {selectedTracks[currentTrackIndex]?.artists?.map(a => a.name).join(', ')}\n                  </div>\n                  <div className=\"track-position\">\n                    Position: {formatTrackDuration(trackPositions[selectedTracks[currentTrackIndex]?.uri] || 0)} / \n                    {formatTrackDuration(selectedTracks[currentTrackIndex]?.duration_ms || 0)}\n                  </div>\n                </div>\n              </div>\n              {currentlyPlaying && (\n                <div className=\"now-playing\">\n                  ▶️ Now Playing: {playDuration}s segment\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Controls */}\n          <div className=\"controls\">\n            <button \n              onClick={startTimer} \n              disabled={isTimerRunning || selectedTracks.length === 0}\n              className=\"control-btn start-btn\"\n            >\n              START\n            </button>\n            <button \n              onClick={stopTimer} \n              disabled={!isTimerRunning}\n              className=\"control-btn stop-btn\"\n            >\n              STOP\n            </button>\n            <button \n              onClick={fullStop}\n              className=\"control-btn full-stop-btn\"\n            >\n              FULL STOP\n            </button>\n          </div>\n\n          {/* Advanced Settings Panel */}\n          {showSettings && (\n            <div className=\"settings-panel\">\n              <h3>Advanced Settings</h3>\n              \n              {/* Timer Mode Toggle */}\n              <div className=\"setting-group\">\n                <label>Timer Mode</label>\n                <div className=\"toggle-group\">\n                  <button\n                    onClick={() => setAbsoluteTimeMode(false)}\n                    className={!absoluteTimeMode ? 'toggle-btn active' : 'toggle-btn'}\n                  >\n                    Relative Timer\n                  </button>\n                  <button\n                    onClick={() => setAbsoluteTimeMode(true)}\n                    className={absoluteTimeMode ? 'toggle-btn active' : 'toggle-btn'}\n                  >\n                    Absolute Time\n                  </button>\n                </div>\n              </div>\n\n              {/* Playback Timing Mode */}\n              <div className=\"setting-group\">\n                <label>Cycle Calculation</label>\n                <div className=\"toggle-group\">\n                  <button\n                    onClick={() => setPlaybackTimingMode('start')}\n                    className={playbackTimingMode === 'start' ? 'toggle-btn active' : 'toggle-btn'}\n                  >\n                    From Start\n                  </button>\n                  <button\n                    onClick={() => setPlaybackTimingMode('end')}\n                    className={playbackTimingMode === 'end' ? 'toggle-btn active' : 'toggle-btn'}\n                  >\n                    From End\n                  </button>\n                </div>\n                <small>From Start: Timer starts when song begins | From End: Timer starts when song ends</small>\n              </div>\n\n              {/* Absolute Time Settings */}\n              {absoluteTimeMode && (\n                <div className=\"setting-group\">\n                  <label>Absolute Time Slots</label>\n                  <div className=\"checkbox-group\">\n                    <label className=\"checkbox-label\">\n                      <input\n                        type=\"checkbox\"\n                        checked={absoluteTimeSlots.hourly}\n                        onChange={(e) => setAbsoluteTimeSlots(prev => ({\n                          ...prev,\n                          hourly: e.target.checked\n                        }))}\n                      />\n                      Every Hour (00:00)\n                    </label>\n                    <label className=\"checkbox-label\">\n                      <input\n                        type=\"checkbox\"\n                        checked={absoluteTimeSlots.halfHourly}\n                        onChange={(e) => setAbsoluteTimeSlots(prev => ({\n                          ...prev,\n                          halfHourly: e.target.checked\n                        }))}\n                      />\n                      Every Half Hour (30:00)\n                    </label>\n                  </div>\n                </div>\n              )}\n\n              {/* Notifications */}\n              <div className=\"setting-group\">\n                <label className=\"checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    checked={notificationsEnabled}\n                    onChange={(e) => setNotificationsEnabled(e.target.checked)}\n                  />\n                  Enable Notifications\n                </label>\n              </div>\n              \n              {/* Timer Duration (only for relative mode) */}\n              {!absoluteTimeMode && (\n                <div className=\"setting-group\">\n                  <label>Timer Duration</label>\n                  <div className=\"timer-presets\">\n                    {TIMER_PRESETS.map(preset => (\n                      <button\n                        key={preset.label}\n                        onClick={() => {\n                          setTimerDuration(preset.value);\n                          setTimeRemaining(preset.value * 60);\n                          saveTimerSettings();\n                        }}\n                        className={Math.abs(timerDuration - preset.value) < 0.1 ? 'preset-btn active' : 'preset-btn'}\n                      >\n                        {preset.label}\n                      </button>\n                    ))}\n                  </div>\n                  <div className=\"custom-timer\">\n                    <input\n                      type=\"number\"\n                      value={customTimerInput}\n                      onChange={(e) => setCustomTimerInput(e.target.value)}\n                      placeholder=\"Custom minutes (0.1-120)\"\n                      min=\"0.1\"\n                      max=\"120\"\n                      step=\"0.1\"\n                    />\n                    <button onClick={applyCustomTimer} className=\"apply-btn\">Apply</button>\n                  </div>\n                </div>\n              )}\n\n              {/* Play Duration */}\n              <div className=\"setting-group\">\n                <label>Play Duration (seconds)</label>\n                <input\n                  type=\"range\"\n                  min=\"10\"\n                  max=\"60\"\n                  value={playDuration}\n                  onChange={(e) => {\n                    setPlayDuration(parseInt(e.target.value));\n                    saveTimerSettings();\n                  }}\n                />\n                <span>{playDuration}s</span>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Schedule Tab */}\n      {activeTab === 'schedule' && (\n        <div className=\"schedule-section\">\n          <h3>Weekly Schedule</h3>\n          <p>Select when the timer should be active (7:00 AM - 5:00 PM, Monday-Friday)</p>\n          \n          <div className=\"weekly-schedule\">\n            <div className=\"schedule-header\">\n              <div className=\"time-label\">Time</div>\n              {DAYS.map(day => (\n                <div key={day} className=\"day-header\">\n                  <div className=\"day-name\">{day.substring(0, 3)}</div>\n                  <label className=\"whole-day-checkbox\">\n                    <input\n                      type=\"checkbox\"\n                      checked={weeklySchedule[day]?.wholeDay || false}\n                      onChange={() => toggleWholeDay(day)}\n                    />\n                    Whole Day\n                  </label>\n                </div>\n              ))}\n            </div>\n            \n            <div className=\"schedule-grid\">\n              {TIME_SLOTS.map(timeSlot => (\n                <div key={timeSlot} className=\"schedule-row\">\n                  <div className=\"time-slot-label\">{timeSlot}</div>\n                  {DAYS.map(day => (\n                    <div key={`${day}-${timeSlot}`} className=\"schedule-cell\">\n                      <input\n                        type=\"checkbox\"\n                        checked={weeklySchedule[day]?.timeSlots?.[timeSlot] || false}\n                        onChange={() => toggleWeeklyScheduleSlot(day, timeSlot)}\n                        className=\"schedule-checkbox\"\n                      />\n                    </div>\n                  ))}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Tracks Tab */}\n      {activeTab === 'tracks' && (\n        <div className=\"track-selection\">\n          <h3>Selected Tracks ({selectedTracks.length}/5)</h3>\n          \n          {/* Search */}\n          <div className=\"search-section\">\n            <div className=\"search-input\">\n              <input\n                type=\"text\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                placeholder=\"Search for tracks...\"\n                onKeyPress={(e) => e.key === 'Enter' && searchTracks()}\n              />\n              <button onClick={searchTracks} disabled={isSearching}>\n                {isSearching ? 'Searching...' : 'Search'}\n              </button>\n            </div>\n          </div>\n\n          {/* Selected Tracks */}\n          {selectedTracks.length > 0 && (\n            <div className=\"selected-tracks\">\n              <h4>Your Tracks:</h4>\n              {selectedTracks.map((track, index) => (\n                <div key={track.id} className=\"track-item selected\">\n                  <span className=\"track-number\">{index + 1}.</span>\n                  {track.album?.images?.[2] && (\n                    <img src={track.album.images[2].url} alt={track.name} className=\"track-image-small\" />\n                  )}\n                  <div className=\"track-info\">\n                    <div className=\"track-name\">{track.name}</div>\n                    <div className=\"track-artist\">{track.artists?.map(a => a.name).join(', ')}</div>\n                  </div>\n                  <button onClick={() => removeTrack(track.id)} className=\"remove-btn\">×</button>\n                </div>\n              ))}\n            </div>\n          )}\n\n          {/* Search Results */}\n          {searchResults.length > 0 && (\n            <div className=\"search-results\">\n              <h4>Search Results:</h4>\n              {searchResults.map((track) => (\n                <div key={track.id} className=\"track-item\">\n                  {track.album?.images?.[2] && (\n                    <img src={track.album.images[2].url} alt={track.name} className=\"track-image-small\" />\n                  )}\n                  <div className=\"track-info\">\n                    <div className=\"track-name\">{track.name}</div>\n                    <div className=\"track-artist\">{track.artists?.map(a => a.name).join(', ')}</div>\n                    <div className=\"track-duration\">{formatTrackDuration(track.duration_ms)}</div>\n                  </div>\n                  <button \n                    onClick={() => selectTrack(track)} \n                    disabled={selectedTracks.length >= 5 || selectedTracks.find(t => t.id === track.id)}\n                    className=\"select-btn\"\n                  >\n                    {selectedTracks.find(t => t.id === track.id) ? 'Selected' : 'Select'}\n                  </button>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SpotifyTimer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}